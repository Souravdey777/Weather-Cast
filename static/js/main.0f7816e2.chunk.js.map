{"version":3,"sources":["components/currentweatherdetails/currentweatherdetails.module.css","containers/AppContainer/AppContainer.module.css","components/temperatureModal/temperatureModal.js","components/currentweatherdetails/currentweatherdetails.js","components/hourlyweatherdetails/hourlyweatherdetails.js","containers/AppContainer/AppContainer.js","App.js","serviceWorker.js","index.js","components/hourlyweatherdetails/hourlyweatherdetails.module.css","components/temperatureModal/temperatureModal.module.css"],"names":["module","exports","body","currentweatherdetails","lines","topic","text","twotext","AppContainer","TemperatureModal","tempModal","React","createRef","description","maxmixtemp","handleScroll","window","scrollY","innerWidth","_this","current","style","width","height","opacity","removeEventListener","this","addEventListener","getName","require","react_default","a","createElement","props","weatherData","ref","className","ClassNames","color","build_default","icon","size","animate","weather","map","content","charAt","toUpperCase","slice","temp","main","toFixed","temp_max","temp_min","city","name","concat","sys","country","Component","CurrentWeatherDetails","UNIX_timestamp","Date","year","getFullYear","month","getMonth","date","getDate","hour","getHours","min","getMinutes","sec","getSeconds","substr","AmorPm","CurrentweatherData","humidity","pressure","clouds","all","wind","speed","deg","gettime","sunrise","sunset","HourlyWeatherDetails","state","ExtraDetails","clicked","showExtraDetails","extra","setState","_this2","section","HourlyWeatherData","eachSection","onClick","key","dt","max_temp","min_temp","latitude","longitude","API_KEY","base","cod","coord","id","visibility","length","hourlyData","dailyData","getlocation","navigator","geolocation","getCurrentPosition","position","console","log","coords","getWeather","axios","get","then","response","data","catch","error","list","error1","temperatureModal","hourlyweatherdetails","App","containers_AppContainer_AppContainer","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0f7816e2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"currentweatherdetails_body__3wfSf\",\"currentweatherdetails\":\"currentweatherdetails_currentweatherdetails__3fRHn\",\"lines\":\"currentweatherdetails_lines__1LY9S\",\"topic\":\"currentweatherdetails_topic__1x09H\",\"text\":\"currentweatherdetails_text__3bqSf\",\"twotext\":\"currentweatherdetails_twotext__1xJzK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppContainer\":\"AppContainer_AppContainer__2NJBC\"};","import React, { Component } from 'react';\r\nimport ClassNames from './temperatureModal.module.css';\r\nimport ReactAnimatedWeather from 'react-animated-weather';\r\nlet lastScrollY = 0;\r\n\r\nclass TemperatureModal extends Component {\r\n\r\n\r\n    componentWillMount() {\r\n        window.removeEventListener('scroll', this.handleScroll);\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('scroll', this.handleScroll);\r\n    }\r\n\r\n    tempModal = React.createRef();\r\n    description = React.createRef();\r\n    maxmixtemp = React.createRef();\r\n\r\n    handleScroll = () => {\r\n        lastScrollY = window.scrollY;\r\n\r\n        if (lastScrollY > window.innerWidth*0.1) {\r\n            this.tempModal.current.style.width = \"100px\";\r\n            this.tempModal.current.style.height = \"100px\";\r\n            this.description.current.style.opacity = \"0\";\r\n            this.maxmixtemp.current.style.opacity = \"0\";\r\n        }\r\n        else {\r\n            this.tempModal.current.style.width = \"250px\";\r\n            this.tempModal.current.style.height = \"250px\";\r\n            this.description.current.style.opacity = \"1\";\r\n            this.maxmixtemp.current.style.opacity = \"1\";\r\n        }\r\n    };\r\n\r\n\r\n    render() {\r\n        const { getName } = require('country-list');\r\n        return (\r\n            <div>\r\n                {this.props.weatherData ? (\r\n                    <div ref={this.tempModal} className={ClassNames.tempModal} style={{\r\n                        color: \"rgba(74,140,255,1)\"\r\n                        // color: \"rgb(198, 102, 0)\"\r\n                    }}>\r\n                        <div ref={this.description} className={ClassNames.description}>\r\n                            <ReactAnimatedWeather\r\n                                icon=\"CLEAR_DAY\"\r\n                                color=\"rgba(74,140,255,1)\"\r\n                                size={108}\r\n                                animate={true}\r\n                            />\r\n                            <br />\r\n                            {this.props.weatherData.weather.map(content => {\r\n                                return (content.description.charAt(0).toUpperCase() + content.description.slice(1))\r\n                            })}\r\n                        </div>\r\n                        <div className={ClassNames.temp}>\r\n                            {(this.props.weatherData.main.temp - 273.15).toFixed(2)}°C\r\n                            <div ref={this.maxmixtemp} className={ClassNames.maxmixtemp} >\r\n                                <div>↑{(this.props.weatherData.main.temp_max - 273.15).toFixed(2)}°C</div>\r\n                                <div>↓{(this.props.weatherData.main.temp_min - 273.15).toFixed(2)}°C</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={ClassNames.city}>\r\n                            {this.props.weatherData.name}, {\r\n                                getName(`${this.props.weatherData.sys.country}`)}\r\n                        </div>\r\n                    </div>) : null\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TemperatureModal;\r\n","import React, { Component } from 'react';\nimport ClassNames from './currentweatherdetails.module.css';\n\nclass CurrentWeatherDetails extends Component {\n\ngetdatetime(UNIX_timestamp){\n  var a = new Date(UNIX_timestamp * 1000);\n  var months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\n  var year = a.getFullYear();\n  var month = months[a.getMonth()];\n  var date = a.getDate();\n  var hour = \"0\" + a.getHours();\n  var min = \"0\" + a.getMinutes();\n  var sec = \"0\" + a.getSeconds();\n  var datetime = date + ' ' + month + ' ' + year + ' ' + hour.substr(-2)  + ':' + min.substr(-2)  + ':' + sec.substr(-2)  ;\nreturn datetime;\n}\ngettime(UNIX_timestamp){\n  var AmorPm =\"am\"\n  var a = new Date(UNIX_timestamp * 1000);\n  var hour = \"0\" + a.getHours();\n  var min = \"0\" + a.getMinutes();\n  if(hour >12){\n    hour=  \"0\" + (hour-12)\n    AmorPm = \"pm\";\n  }\n  var datetime = hour.substr(-2)  + ':' + min.substr(-2) + AmorPm ;\nreturn datetime;\n}\n\n  render() {\n    return (\n      <div className={ClassNames.body}>\n\n        <div className={ClassNames.currentweatherdetails}>\n          <div className={ClassNames.topic}>Humidity</div>\n          <div className={ClassNames.lines} />\n          <div className={ClassNames.text}>\n            {this.props.CurrentweatherData.main.humidity} %\n          </div>\n        </div>\n\n        <div className={ClassNames.currentweatherdetails}>\n          <div className={ClassNames.topic}>Pressure</div>\n          <div className={ClassNames.lines} />\n          <div className={ClassNames.text}>\n            {this.props.CurrentweatherData.main.pressure} hPa\n          </div>\n        </div>\n\n        <div className={ClassNames.currentweatherdetails}>\n          <div className={ClassNames.topic}>Cloudiness</div>\n          <div className={ClassNames.lines} />\n          <div className={ClassNames.text}>\n          {this.props.CurrentweatherData.clouds.all}%\n          </div>\n        </div>\n\n        <div className={ClassNames.currentweatherdetails}>\n          <div className={ClassNames.topic}>Temperature</div>\n          <div className={ClassNames.lines} />\n          <div className={ClassNames.twotext}>\n          <div>Min: ↓{(this.props.CurrentweatherData.main.temp_min - 273.15).toFixed(2)}°C</div>\n          <div>Max: ↑{(this.props.CurrentweatherData.main.temp_max - 273.15).toFixed(2)}°C</div>\n          </div>\n        </div>\n\n        <div className={ClassNames.currentweatherdetails}>\n          <div className={ClassNames.topic}>Wind</div>\n          <div className={ClassNames.lines} />\n          <div className={ClassNames.twotext}>\n            <div>Speed: {this.props.CurrentweatherData.wind.speed} m/sec</div>\n            <div>Deg: {this.props.CurrentweatherData.wind.deg}°</div>\n          </div>\n        </div>\n\n        <div className={ClassNames.currentweatherdetails}>\n          <div className={ClassNames.twotext}>\n            <div>Sunrise: {this.gettime(this.props.CurrentweatherData.sys.sunrise)}</div>\n            <div>Sunset: {this.gettime(this.props.CurrentweatherData.sys.sunset)}</div>\n          </div>\n        </div>\n\n        \n        {/* last update {this.getdatetime(this.props.CurrentweatherData.dt)} */}\n      </div >\n    );\n  }\n}\n\nexport default CurrentWeatherDetails;\n","import React, { Component } from 'react';\nimport ClassNames from './hourlyweatherdetails.module.css';\n\n\n\nclass HourlyWeatherDetails extends Component {\n\n    state = {\n        ExtraDetails: [],\n        clicked: false\n    }\n\n    gettime(UNIX_timestamp) {\n        var AmorPm = \"am\"\n        var a = new Date(UNIX_timestamp * 1000);\n        var hour = \"0\" + a.getHours();\n        var min = \"0\" + a.getMinutes();\n        if (hour > 12) {\n            hour = \"0\" + (hour - 12)\n            AmorPm = \"pm\";\n        }\n        var datetime = hour.substr(-2) + ':' + min.substr(-2) + AmorPm;\n        return datetime;\n    }\n\n\n    showExtraDetails = (extra) => {\n        if (extra === this.state.ExtraDetails) {\n            this.setState({ clicked: !this.state.clicked })\n        }\n        else {\n            this.setState({ clicked: true })\n        }\n        this.setState({ ExtraDetails: extra })\n    }\n\n    render() {\n\n        return (\n            <div className={ClassNames.body}>\n                <div className={ClassNames.topic}>Hourly Forcast</div>\n                <div className={ClassNames.lines} />\n                <div className={ClassNames.section}>\n                    {this.props.HourlyWeatherData.slice(0, 20).map(content => (\n                        <div className={ClassNames.eachSection} onClick={() => this.showExtraDetails(content)} key={content.dt}>\n                            {(content.main.temp - 273.15).toFixed(2)}°C<br />\n                            {this.gettime(content.dt)}\n                        </div>\n                    ))}\n                </div>\n                {\n                    this.state.clicked ? (\n                        <div className={ClassNames.text}>\n                            <div>\n                                Temp:{(this.state.ExtraDetails.main.temp - 273.15).toFixed(2)}°C\n                            </div>\n                            <div>\n                                Max Temp: {(this.state.ExtraDetails.main.max_temp - 273.15).toFixed(2)}°C\n                            </div>\n                            <div>\n                                Min Temp: {(this.state.ExtraDetails.main.min_temp - 273.15).toFixed(2)}°C\n                            </div>\n                            <div>\n                                Pressure: {this.state.ExtraDetails.main.pressure} hPa\n                            </div>\n                            <div>\n                                Humidity: {this.state.ExtraDetails.main.humidity} %\n                            </div>\n\n                            <div className={ClassNames.lines} />\n                        </div>\n                    ) : null\n                }\n\n            </div >\n        );\n    }\n}\n\nexport default HourlyWeatherDetails;\n","import React, { Component } from 'react';\nimport ClassNames from './AppContainer.module.css';\nimport TemperatureModal from '../../components/temperatureModal/temperatureModal';\nimport axios from 'axios';\nimport CurrentWeatherDetails from '../../components/currentweatherdetails/currentweatherdetails';\nimport HourlyWeatherDetails from '../../components/hourlyweatherdetails/hourlyweatherdetails';\nclass AppContainer extends Component {\n    state = {\n        latitude: null,\n        longitude: null,\n        API_KEY: `9ed5e07cc11f0ef0a18b03f79dde4029`,\n        weatherData: {\n            base: \"\",\n            clouds: {},\n            cod: null,\n            coord: {},\n            dt: null,\n            id: null,\n            main: {},\n            name: \"\",\n            sys: {},\n            visibility: null,\n            weather: [],\n            length: null,\n            wind: {}\n        },\n        hourlyData: [],\n        dailyData: [],\n    }\n\n    componentDidMount() {\n        this.getlocation();\n    }\n\n    getlocation = () => {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(position => {\n                console.log(position.coords.latitude)\n                this.setState({ latitude: position.coords.latitude, longitude: position.coords.longitude }, () => {\n                    this.getWeather();\n                })\n            });\n        }\n    }\n\n    getWeather = () => {\n\n        //Current forcast\n        axios\n            .get(`https://api.openweathermap.org/data/2.5/weather?lat=${this.state.latitude}&lon=${this.state.longitude}&APPID=${this.state.API_KEY}`)\n            .then(response => {\n                const weatherData = response.data;\n                console.log(weatherData);\n                this.setState({ weatherData: weatherData }, () => {\n                });\n            })\n            .catch(error => {\n                console.log(error);\n                this.setState({ error: error });\n            });\n        //Hourly forcast\n        axios\n            .get(`https://api.openweathermap.org/data/2.5/forecast/hourly?lat=${this.state.latitude}&lon=${this.state.longitude}&APPID=${this.state.API_KEY}`)\n            .then(response => {\n                const hourlyData = response.data.list;\n                console.log(hourlyData);\n                this.setState({ hourlyData: hourlyData }, () => {\n                });\n            })\n            .catch(error1 => {\n                console.log(error1);\n                this.setState({ error: error1 });\n            });\n        //Daily forcast\n        axios\n            .get(`https://api.openweathermap.org/data/2.5/forecast/daily?lat=${this.state.latitude}&lon=${this.state.longitude}&cnt=10&APPID=${this.state.API_KEY}`)\n            .then(response => {\n                const dailyData = response.data.list;\n                console.log(dailyData);\n                this.setState({ dailyData: dailyData }, () => {\n                });\n            })\n            .catch(error1 => {\n                console.log(error1);\n                this.setState({ error: error1 });\n            });\n    }\n\n\n    render() {\n        return (\n            <div className={ClassNames.AppContainer}>\n                <TemperatureModal weatherData={this.state.weatherData} />\n                <CurrentWeatherDetails CurrentweatherData={this.state.weatherData} />\n                <HourlyWeatherDetails HourlyWeatherData={this.state.hourlyData} />\n            </div>\n        );\n    }\n}\n\nexport default AppContainer;\n","import React, { Component } from 'react';\nimport './App.css';\nimport AppContainer from './containers/AppContainer/AppContainer';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <AppContainer/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"hourlyweatherdetails_body__Tvb0z\",\"lines\":\"hourlyweatherdetails_lines__3BTZV\",\"topic\":\"hourlyweatherdetails_topic__1Lu_B\",\"section\":\"hourlyweatherdetails_section__hLDD_\",\"eachSection\":\"hourlyweatherdetails_eachSection__3Sxyq\",\"text\":\"hourlyweatherdetails_text__1sC3K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tempModal\":\"temperatureModal_tempModal__fja7a\",\"temp\":\"temperatureModal_temp__3HBas\",\"maxmixtemp\":\"temperatureModal_maxmixtemp__2JbEq\",\"city\":\"temperatureModal_city__39b3F\",\"description\":\"temperatureModal_description__1wMy3\"};"],"sourceRoot":""}