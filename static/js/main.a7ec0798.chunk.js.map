{"version":3,"sources":["components/currentweatherdetails/currentweatherdetails.module.css","components/footer/footer.module.css","components/hourlyweatherdetails/hourlyweatherdetails.module.css","containers/AppContainer/AppContainer.module.css","components/temperatureModal/temperatureModal.js","components/currentweatherdetails/currentweatherdetails.js","components/hourlyweatherdetails/hourlyweatherdetails.js","components/footer/footer.js","containers/AppContainer/AppContainer.js","App.js","serviceWorker.js","index.js","components/temperatureModal/temperatureModal.module.css"],"names":["module","exports","body","currentweatherdetails","lines","topic","text","twotext","footer","footercontent","section","eachSection","eachSectionclicked","ExtraDetails","iconsection","smallicon","icon","AppContainer","TemperatureModal","tempModal","React","createRef","description","maxmixtemp","handleScroll","window","scrollY","innerWidth","_this","current","style","width","height","opacity","removeEventListener","this","addEventListener","react_default","a","createElement","react_loading_default","type","color","getName","require","props","weatherData","ref","className","ClassNames","build_default","size","animate","weather","map","content","charAt","toUpperCase","slice","temp","main","toFixed","temp_max","temp_min","city","name","concat","sys","country","Component","CurrentWeatherDetails","UNIX_timestamp","Date","year","getFullYear","month","getMonth","date","getDate","hour","getHours","min","getMinutes","sec","getSeconds","substr","AmorPm","CurrentweatherData","fontSize","humidity","pressure","clouds","all","wind","speed","deg","gettime","sunrise","sunset","HourlyWeatherDetails","state","clicked","showExtraDetails","extra","setState","dayOfWeek","get","_this2","HourlyWeatherData","onClick","key","dt","lib_default","iconId","String","value","id","flip","rotate","Footer","classNames","datetime","latitude","longitude","API_KEY","base","cod","coord","visibility","length","hourlyData","dailyData","updateButtonClicked","getlocation","navigator","geolocation","getCurrentPosition","position","console","log","coords","getWeather","today","axios","then","response","data","catch","error","list","temperatureModal","hourlyweatherdetails","App","containers_AppContainer_AppContainer","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","src_App_0","document","getElementById","URL","process","href","origin","fetch","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a7ec0798.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"currentweatherdetails_body__3wfSf\",\"currentweatherdetails\":\"currentweatherdetails_currentweatherdetails__3fRHn\",\"lines\":\"currentweatherdetails_lines__1LY9S\",\"topic\":\"currentweatherdetails_topic__1x09H\",\"text\":\"currentweatherdetails_text__3bqSf\",\"twotext\":\"currentweatherdetails_twotext__1xJzK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"footer_footer__195St\",\"footercontent\":\"footer_footercontent__3SYiD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"hourlyweatherdetails_body__Tvb0z\",\"lines\":\"hourlyweatherdetails_lines__3BTZV\",\"topic\":\"hourlyweatherdetails_topic__1Lu_B\",\"section\":\"hourlyweatherdetails_section__hLDD_\",\"eachSection\":\"hourlyweatherdetails_eachSection__3Sxyq\",\"eachSectionclicked\":\"hourlyweatherdetails_eachSectionclicked__37TTY\",\"ExtraDetails\":\"hourlyweatherdetails_ExtraDetails__RFsmW\",\"iconsection\":\"hourlyweatherdetails_iconsection__GTmDQ\",\"smallicon\":\"hourlyweatherdetails_smallicon__3tIl1\",\"icon\":\"hourlyweatherdetails_icon__zGqC_\",\"text\":\"hourlyweatherdetails_text__1sC3K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppContainer\":\"AppContainer_AppContainer__2NJBC\"};","import React, { Component } from 'react';\r\nimport ClassNames from './temperatureModal.module.css';\r\nimport ReactAnimatedWeather from 'react-animated-weather';\r\nimport ReactLoading from \"react-loading\";\r\n\r\nlet lastScrollY = 0;\r\n\r\nclass TemperatureModal extends Component {\r\n\r\n\r\n    componentWillMount() {\r\n        window.removeEventListener('scroll', this.handleScroll);\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('scroll', this.handleScroll);\r\n    }\r\n\r\n    tempModal = React.createRef();\r\n    description = React.createRef();\r\n    maxmixtemp = React.createRef();\r\n\r\n    handleScroll = () => {\r\n        lastScrollY = window.scrollY;\r\n\r\n        if (lastScrollY > window.innerWidth*0.1) {\r\n            this.tempModal.current.style.width = \"100px\";\r\n            this.tempModal.current.style.height = \"100px\";\r\n            this.description.current.style.opacity = \"0\";\r\n            this.maxmixtemp.current.style.opacity = \"0\";\r\n        }\r\n        else {\r\n            this.tempModal.current.style.width = \"250px\";\r\n            this.tempModal.current.style.height = \"250px\";\r\n            this.description.current.style.opacity = \"1\";\r\n            this.maxmixtemp.current.style.opacity = \"1\";\r\n        }\r\n    };\r\n\r\n\r\n    render() {\r\n\r\n        let loader =<ReactLoading type=\"spinningBubbles\"color=\"#fff\" />\r\n        \r\n        const { getName } = require('country-list');\r\n        return (\r\n            <div>\r\n                {this.props.weatherData? (\r\n                    <div ref={this.tempModal} className={ClassNames.tempModal} style={{\r\n                        color: \"rgba(74,140,255)\"\r\n                        // color: \"rgb(198, 102, 0)\"\r\n                    }}>\r\n                        <div ref={this.description} className={ClassNames.description}>\r\n                            <ReactAnimatedWeather\r\n                                icon=\"CLEAR_DAY\"\r\n                                color=\"rgb(74,140,255)\"\r\n                                size={108}\r\n                                animate={true}\r\n                            />\r\n                            <br />\r\n                            {this.props.weatherData.weather.map(content => {\r\n                                return (content.description.charAt(0).toUpperCase() + content.description.slice(1))\r\n                            })}\r\n                        </div>\r\n                        <div className={ClassNames.temp}>\r\n                            {(this.props.weatherData.main.temp - 273.15).toFixed(2)}°C\r\n                            <div ref={this.maxmixtemp} className={ClassNames.maxmixtemp} >\r\n                                <div>↑{(this.props.weatherData.main.temp_max - 273.15).toFixed(2)}°C</div>\r\n                                <div>↓{(this.props.weatherData.main.temp_min - 273.15).toFixed(2)}°C</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={ClassNames.city}>\r\n                            {this.props.weatherData.name}, {\r\n                                getName(`${this.props.weatherData.sys.country}`)}\r\n                        </div>\r\n                    </div>) : null\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TemperatureModal;\r\n","import React, { Component } from 'react';\nimport ClassNames from './currentweatherdetails.module.css';\n\nclass CurrentWeatherDetails extends Component {\n\n  getdatetime(UNIX_timestamp) {\n    var a = new Date(UNIX_timestamp * 1000);\n    var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    var year = a.getFullYear();\n    var month = months[a.getMonth()];\n    var date = a.getDate();\n    var hour = \"0\" + a.getHours();\n    var min = \"0\" + a.getMinutes();\n    var sec = \"0\" + a.getSeconds();\n    var datetime = date + ' ' + month + ' ' + year + ' ' + hour.substr(-2) + ':' + min.substr(-2) + ':' + sec.substr(-2);\n    return datetime;\n  }\n  gettime(UNIX_timestamp) {\n    var AmorPm = \"am\"\n    var a = new Date(UNIX_timestamp * 1000);\n    var hour = \"0\" + a.getHours();\n    var min = \"0\" + a.getMinutes();\n    if (hour > 12) {\n      hour = \"0\" + (hour - 12)\n      AmorPm = \"pm\";\n    }\n    var datetime = hour.substr(-2) + ':' + min.substr(-2) + AmorPm;\n    return datetime;\n  }\n\n  render() {\n    return (\n      <div className={ClassNames.body}>\n\n        <div className={ClassNames.currentweatherdetails}>\n          <div className={ClassNames.topic}>Temperature</div>\n          <div className={ClassNames.lines} />\n          <div className={ClassNames.twotext}>\n            <div>↓{(this.props.CurrentweatherData.main.temp_min - 273.15).toFixed(2)}°C</div>\n            <div style={{fontSize:\"22px\"}}>{(this.props.CurrentweatherData.main.temp - 273.15).toFixed(2)}°C</div>\n            <div>↑{(this.props.CurrentweatherData.main.temp_max - 273.15).toFixed(2)}°C</div>\n          </div>\n        </div>\n        <div className={ClassNames.currentweatherdetails}>\n          <div className={ClassNames.topic}>Humidity</div>\n          <div className={ClassNames.lines} />\n          <div className={ClassNames.text}>\n            {this.props.CurrentweatherData.main.humidity} %\n          </div>\n        </div>\n\n        <div className={ClassNames.currentweatherdetails}>\n          <div className={ClassNames.topic}>Pressure</div>\n          <div className={ClassNames.lines} />\n          <div className={ClassNames.text}>\n            {this.props.CurrentweatherData.main.pressure} hPa\n          </div>\n        </div>\n\n        <div className={ClassNames.currentweatherdetails}>\n          <div className={ClassNames.topic}>Cloudiness</div>\n          <div className={ClassNames.lines} />\n          <div className={ClassNames.text}>\n            {this.props.CurrentweatherData.clouds.all}%\n          </div>\n        </div>\n\n        <div className={ClassNames.currentweatherdetails}>\n          <div className={ClassNames.topic}>Wind</div>\n          <div className={ClassNames.lines} />\n          <div className={ClassNames.twotext}>\n            <div>Speed: {this.props.CurrentweatherData.wind.speed} m/sec</div>\n            <div>Deg: {this.props.CurrentweatherData.wind.deg}°</div>\n          </div>\n        </div>\n\n        <div className={ClassNames.currentweatherdetails}>\n          <div className={ClassNames.twotext}>\n            <div>Sunrise: {this.gettime(this.props.CurrentweatherData.sys.sunrise)}</div>\n            <div>Sunset: {this.gettime(this.props.CurrentweatherData.sys.sunset)}</div>\n          </div>\n        </div>\n\n\n        {/* last update {this.getdatetime(this.props.CurrentweatherData.dt)} */}\n      </div >\n    );\n  }\n}\n\nexport default CurrentWeatherDetails;\n","import React, { Component } from 'react';\nimport ClassNames from './hourlyweatherdetails.module.css';\nimport WeatherIcon from 'react-icons-weather';\n\n\nclass HourlyWeatherDetails extends Component {\n\n    state = {\n        ExtraDetails: [],\n        clicked: false,\n    }\n\n    gettime(UNIX_timestamp) {\n        var AmorPm = \"am\"\n        var a = new Date(UNIX_timestamp * 1000);\n        var hour = \"0\" + a.getHours();\n        var min = \"0\" + a.getMinutes();\n        if (hour > 12) {\n            hour = \"0\" + (hour - 12)\n            AmorPm = \"pm\";\n        }\n        var datetime = hour.substr(-2) + ':' + min.substr(-2) + AmorPm;\n        return datetime;\n    }\n\n    getday(UNIX_timestamp) {\n        var day = ['Monday', 'Tuesday', 'Wednesday', 'Thrusday', 'Friday', 'Saturday', 'Sunday'];\n        var a = new Date(UNIX_timestamp * 1000)\n        var dayOfWeek = require('day-of-week').get\n\n        var b = day[dayOfWeek(new Date(a.getFullYear(), a.getMonth(), a.getDate()), 'America/Los_Angeles')]\n        return b;\n    }\n\n    showExtraDetails = (extra) => {\n        if (extra === this.state.ExtraDetails) {\n            this.setState({ clicked: !this.state.clicked })\n        }\n        else {\n            this.setState({ clicked: true })\n        }\n        this.setState({ ExtraDetails: extra })\n        //console.log(a.getFullYear()+\"/\"+a.getMonth()+\"/\"+a.getDate())\n    }\n\n    render() {\n\n        return (\n            <div className={ClassNames.body}>\n                <div className={ClassNames.topic}>Hourly Forcast</div>\n                <div className={ClassNames.lines} />\n                <div className={ClassNames.section}>\n                    {this.props.HourlyWeatherData.slice(0, 96).map(content => (\n                        <div\n                            className={this.state.clicked && this.state.ExtraDetails === content ? ClassNames.eachSectionclicked : ClassNames.eachSection}\n                            onClick={() => this.showExtraDetails(content)}\n                            key={content.dt}>\n                            <WeatherIcon\n                                name=\"owm\"\n                                className={ClassNames.smallicon}\n                                iconId={String(content.weather.map(value => value.id))}\n                                flip=\"horizontal\"\n                                rotate=\"90\" />\n                            <br />\n                            <div>{(content.main.temp - 273.15).toFixed(2)}°C</div>\n                            <div>{this.gettime(content.dt)}</div>\n                            {/* <div>{this.getday(content.dt)}</div> */}\n                        </div>\n                    ))}\n                </div>\n                {\n                    this.state.clicked ? (\n                        <div className={ClassNames.ExtraDetails}>\n                            <div className={ClassNames.iconsection}>\n                                <WeatherIcon className={ClassNames.icon} name=\"owm\" iconId={String(this.state.ExtraDetails.weather.map(value => value.id))} flip=\"horizontal\" rotate=\"90\" />\n\n                                <div>{this.state.ExtraDetails.weather.map(content => {\n                                    return (content.description.charAt(0).toUpperCase() + content.description.slice(1))\n                                })}\n                                </div>\n                            </div>\n\n                            <div className={ClassNames.text}>\n                                <div>\n                                    Temp: {(this.state.ExtraDetails.main.temp - 273.15).toFixed(2)}°C\n                                </div>\n                                <div>\n                                    Max Temp: {(this.state.ExtraDetails.main.temp_max - 273.15).toFixed(2)}°C\n                                </div>\n                                <div>\n                                    Min Temp: {(this.state.ExtraDetails.main.temp_min - 273.15).toFixed(2)}°C\n                                </div>\n                                <div>\n                                    Pressure: {this.state.ExtraDetails.main.pressure} hPa\n                                </div>\n                                <div>\n                                    Humidity: {this.state.ExtraDetails.main.humidity} %\n                                </div>\n                            </div>\n                        </div>\n\n                    ) : null\n\n                }\n                <div className={ClassNames.lines} />\n            </div >\n        );\n    }\n}\n\nexport default HourlyWeatherDetails;\n","import React from 'react';\nimport classNames from \"./footer.module.css\";\n\nconst Footer=(props)=> (\n      <div className={classNames.footer}>\n        <div className={classNames.footercontent}>last updated : {props.datetime}\n        {/* <button onClick={props.updateButtonClicked}>chck</button> */}\n            </div>\n      </div>\n    )\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport ClassNames from './AppContainer.module.css';\nimport TemperatureModal from '../../components/temperatureModal/temperatureModal';\nimport axios from 'axios';\nimport CurrentWeatherDetails from '../../components/currentweatherdetails/currentweatherdetails';\nimport HourlyWeatherDetails from '../../components/hourlyweatherdetails/hourlyweatherdetails';\nimport Footer from '../../components/footer/footer';\nclass AppContainer extends Component {\n    state = {\n        datetime:null,\n        latitude: null,\n        longitude: null,\n        API_KEY: `9ed5e07cc11f0ef0a18b03f79dde4029`,\n        weatherData: {\n            base: \"\",\n            clouds: {},\n            cod: null,\n            coord: {},\n            dt: null,\n            id: null,\n            main: {},\n            name: \"\",\n            sys: {},\n            visibility: null,\n            weather: [],\n            length: null,\n            wind: {}\n        },\n        hourlyData: [],\n        dailyData: [],\n    }\n\n    componentDidMount() {\n        this.getlocation();\n        \n    }\n\n    updateButtonClicked=()=>{\n        this.getlocation();\n    }\n\n\n    getlocation = () => {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(position => {\n                console.log(position.coords.latitude)\n                this.setState({ latitude: position.coords.latitude, longitude: position.coords.longitude }, () => {\n                    this.getWeather();\n                })\n            });\n        }\n        var today = new Date();\n        var date = today.getDate()+'/'+(today.getMonth()+1)+\" \"+(\"0\" + today.getHours()).substr(-2)  + ':' + (\"0\" + today.getMinutes()).substr(-2);\n        this.setState({datetime:date});\n    }\n\n    getWeather = () => {\n        //Current forcast\n        axios\n            .get(`https://api.openweathermap.org/data/2.5/weather?lat=${this.state.latitude}&lon=${this.state.longitude}&APPID=${this.state.API_KEY}`)\n            .then(response => {\n                const weatherData = response.data;\n                console.log(weatherData);\n                this.setState({ weatherData: weatherData }, () => {\n                });\n            })\n            .catch(error => {\n                console.log(error);\n                this.setState({ error: error });\n            });\n        //Hourly forcast\n        axios\n            .get(`https://api.openweathermap.org/data/2.5/forecast/hourly?lat=${this.state.latitude}&lon=${this.state.longitude}&APPID=${this.state.API_KEY}`)\n            .then(response => {\n                const hourlyData = response.data.list;\n                console.log(hourlyData);\n                this.setState({ hourlyData: hourlyData }, () => {\n                });\n            })\n            .catch(error => {\n                console.log(error);\n                this.setState({ error: error });\n            });\n        //Daily forcast\n        axios\n            .get(`https://api.openweathermap.org/data/2.5/forecast/daily?lat=${this.state.latitude}&lon=${this.state.longitude}&cnt=5&APPID=${this.state.API_KEY}`)\n            .then(response => {\n                const dailyData = response.data.list;\n                console.log(dailyData);\n                this.setState({ dailyData: dailyData }, () => {\n                });\n            })\n            .catch(error => {\n                console.log(error);\n                this.setState({ error: error });\n            });\n    }\n\n    \n    render() {\n        return (\n            <div className={ClassNames.AppContainer}>\n                <TemperatureModal weatherData={this.state.weatherData} />\n                <CurrentWeatherDetails CurrentweatherData={this.state.weatherData} />\n                <HourlyWeatherDetails HourlyWeatherData={this.state.hourlyData} />\n                <Footer datetime={this.state.datetime} updateButtonClicked={this.updateButtonClicked}/>\n            </div>\n        );\n    }\n}\n\nexport default AppContainer;\n","import React, { Component } from 'react';\nimport './App.css';\nimport AppContainer from './containers/AppContainer/AppContainer';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <AppContainer/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tempModal\":\"temperatureModal_tempModal__fja7a\",\"temp\":\"temperatureModal_temp__3HBas\",\"maxmixtemp\":\"temperatureModal_maxmixtemp__2JbEq\",\"city\":\"temperatureModal_city__39b3F\",\"description\":\"temperatureModal_description__1wMy3\"};"],"sourceRoot":""}