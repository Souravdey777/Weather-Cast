{"version":3,"sources":["components/currentweatherdetails/currentweatherdetails.module.css","components/footer/footer.module.css","components/hourlyweatherdetails/hourlyweatherdetails.module.css","containers/AppContainer/AppContainer.module.css","components/temperatureModal/temperatureModal.js","components/currentweatherdetails/currentweatherdetails.js","components/hourlyweatherdetails/hourlyweatherdetails.js","components/footer/footer.js","containers/AppContainer/AppContainer.js","App.js","serviceWorker.js","index.js","components/temperatureModal/temperatureModal.module.css"],"names":["module","exports","body","currentweatherdetails","lines","topic","text","twotext","image","a","footer","footercontent","update","section","eachSection","eachSectionclicked","ExtraDetails","iconsection","smallicon","icon","AppContainer","TemperatureModal","tempModal","React","createRef","description","maxmixtemp","handleScroll","window","scrollY","_this","current","style","width","height","opacity","removeEventListener","this","addEventListener","getName","require","react_default","createElement","props","weatherData","ref","className","ClassNames","color","build_default","size","animate","weather","map","content","charAt","toUpperCase","slice","temp","main","toFixed","temp_max","temp_min","city","name","concat","sys","country","Component","CurrentWeatherDetails","UNIX_timestamp","Date","year","getFullYear","month","getMonth","date","getDate","hour","getHours","min","getMinutes","sec","getSeconds","substr","AmorPm","CurrentweatherData","fontSize","humidity","pressure","clouds","all","wind","speed","deg","gettime","sunrise","sunset","HourlyWeatherDetails","state","clicked","showExtraDetails","extra","setState","clickedtofalse","console","log","dayOfWeek","get","_this2","HourlyWeatherData","onClick","key","dt","lib_default","iconId","String","value","id","flip","rotate","getday","Footer","classNames","display","flex","href","datetime","show","updateButtonClicked","react_loading_default","type","latitude","longitude","API_KEY","base","cod","coord","visibility","length","hourlyData","night","alldatafetched","getlocation","refs","navigator","geolocation","getCurrentPosition","position","coords","getWeather","today","axios","then","spread","response1","response2","data","nightchecker","list","catch","error","Object","defineProperty","background","temperatureModal","hourlyweatherdetails","App","containers_AppContainer_AppContainer","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d0aad5c6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"currentweatherdetails_body__3wfSf\",\"currentweatherdetails\":\"currentweatherdetails_currentweatherdetails__3fRHn\",\"lines\":\"currentweatherdetails_lines__1LY9S\",\"topic\":\"currentweatherdetails_topic__1x09H\",\"text\":\"currentweatherdetails_text__3bqSf\",\"twotext\":\"currentweatherdetails_twotext__1xJzK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"footer_image__1rT76\",\"a\":\"footer_a__3Mmu2\",\"footer\":\"footer_footer__195St\",\"footercontent\":\"footer_footercontent__3SYiD\",\"update\":\"footer_update__3QxBl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"hourlyweatherdetails_body__Tvb0z\",\"lines\":\"hourlyweatherdetails_lines__3BTZV\",\"topic\":\"hourlyweatherdetails_topic__1Lu_B\",\"section\":\"hourlyweatherdetails_section__hLDD_\",\"eachSection\":\"hourlyweatherdetails_eachSection__3Sxyq\",\"eachSectionclicked\":\"hourlyweatherdetails_eachSectionclicked__37TTY\",\"ExtraDetails\":\"hourlyweatherdetails_ExtraDetails__RFsmW\",\"iconsection\":\"hourlyweatherdetails_iconsection__GTmDQ\",\"smallicon\":\"hourlyweatherdetails_smallicon__3tIl1\",\"icon\":\"hourlyweatherdetails_icon__zGqC_\",\"text\":\"hourlyweatherdetails_text__1sC3K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppContainer\":\"AppContainer_AppContainer__2NJBC\"};","import React, { Component } from 'react';\r\nimport ClassNames from './temperatureModal.module.css';\r\nimport ReactAnimatedWeather from 'react-animated-weather';\r\n\r\nlet lastScrollY = 0;\r\n\r\nclass TemperatureModal extends Component {\r\n\r\n\r\n    componentWillMount() {\r\n        window.removeEventListener('scroll', this.handleScroll);\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('scroll', this.handleScroll);\r\n    }\r\n\r\n    tempModal = React.createRef();\r\n    description = React.createRef();\r\n    maxmixtemp = React.createRef();\r\n\r\n    handleScroll = () => {\r\n        lastScrollY = window.scrollY;\r\n\r\n        if (lastScrollY > 50) {\r\n            this.tempModal.current.style.width = \"100px\";\r\n            this.tempModal.current.style.height = \"100px\";\r\n            this.description.current.style.opacity = \"0\";\r\n            this.maxmixtemp.current.style.opacity = \"0\";\r\n        }\r\n        else {\r\n            this.tempModal.current.style.width = \"250px\";\r\n            this.tempModal.current.style.height = \"250px\";\r\n            this.description.current.style.opacity = \"1\";\r\n            this.maxmixtemp.current.style.opacity = \"1\";\r\n        }\r\n    };\r\n\r\n\r\n    render() {\r\n\r\n\r\n        const { getName } = require('country-list');\r\n        return (\r\n            <div>\r\n                {this.props.weatherData? (\r\n                    <div ref={this.tempModal} className={ClassNames.tempModal} style={{\r\n                        color: \"rgba(74,140,255)\"\r\n                        // color: \"rgb(198, 102, 0)\"\r\n                    }}>\r\n                        <div ref={this.description} className={ClassNames.description}>\r\n                            <ReactAnimatedWeather\r\n                                icon=\"CLEAR_DAY\"\r\n                                color=\"rgb(74,140,255)\"\r\n                                size={108}\r\n                                animate={true}\r\n                            />\r\n                            {this.props.weatherData.weather.map(content => {\r\n                                return (content.description.charAt(0).toUpperCase() + content.description.slice(1))\r\n                            })}\r\n                        </div>\r\n                        <div className={ClassNames.temp}>\r\n                            {(this.props.weatherData.main.temp - 273.15).toFixed(2)}°C\r\n                            <div ref={this.maxmixtemp} className={ClassNames.maxmixtemp} >\r\n                                <div>↑{(this.props.weatherData.main.temp_max - 273.15).toFixed(2)}°C</div>\r\n                                <div>↓{(this.props.weatherData.main.temp_min - 273.15).toFixed(2)}°C</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={ClassNames.city}>\r\n                            {this.props.weatherData.name}, {\r\n                                getName(`${this.props.weatherData.sys.country}`)}\r\n                        </div>\r\n                    </div>) : null\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TemperatureModal;\r\n","import React, { Component } from 'react';\nimport ClassNames from './currentweatherdetails.module.css';\n\nclass CurrentWeatherDetails extends Component {\n\n  getdatetime(UNIX_timestamp) {\n    var a = new Date(UNIX_timestamp * 1000);\n    var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    var year = a.getFullYear();\n    var month = months[a.getMonth()];\n    var date = a.getDate();\n    var hour = \"0\" + a.getHours();\n    var min = \"0\" + a.getMinutes();\n    var sec = \"0\" + a.getSeconds();\n    var datetime = date + ' ' + month + ' ' + year + ' ' + hour.substr(-2) + ':' + min.substr(-2) + ':' + sec.substr(-2);\n    return datetime;\n  }\n  gettime(UNIX_timestamp) {\n    var AmorPm = \"am\"\n    var a = new Date(UNIX_timestamp * 1000);\n    var hour = \"0\" + a.getHours();\n    var min = \"0\" + a.getMinutes();\n    if (hour > 12) {\n      hour = \"0\" + (hour - 12)\n      AmorPm = \"pm\";\n    }\n    var datetime = hour.substr(-2) + ':' + min.substr(-2) + AmorPm;\n    return datetime;\n  }\n\n  render() {\n    return (\n     \n      <div className={ClassNames.body}>\n\n        <div className={ClassNames.currentweatherdetails}>\n          <div className={ClassNames.topic}>Temperature</div>\n          <div className={ClassNames.lines} />\n          <div className={ClassNames.twotext}>\n            <div>↓{(this.props.CurrentweatherData.main.temp_min - 273.15).toFixed(2)}°C</div>\n            <div style={{fontSize:\"22px\"}}>{(this.props.CurrentweatherData.main.temp - 273.15).toFixed(2)}°C</div>\n            <div>↑{(this.props.CurrentweatherData.main.temp_max - 273.15).toFixed(2)}°C</div>\n          </div>\n        </div>\n        <div className={ClassNames.currentweatherdetails}>\n          <div className={ClassNames.topic}>Humidity</div>\n          <div className={ClassNames.lines} />\n          <div className={ClassNames.text}>\n            {this.props.CurrentweatherData.main.humidity} %\n          </div>\n        </div>\n\n        <div className={ClassNames.currentweatherdetails}>\n          <div className={ClassNames.topic}>Pressure</div>\n          <div className={ClassNames.lines} />\n          <div className={ClassNames.text}>\n            {this.props.CurrentweatherData.main.pressure} hPa\n          </div>\n        </div>\n\n        <div className={ClassNames.currentweatherdetails}>\n          <div className={ClassNames.topic}>Cloudiness</div>\n          <div className={ClassNames.lines} />\n          <div className={ClassNames.text}>\n            {this.props.CurrentweatherData.clouds.all}%\n          </div>\n        </div>\n\n        <div className={ClassNames.currentweatherdetails}>\n          <div className={ClassNames.topic}>Wind</div>\n          <div className={ClassNames.lines} />\n          <div className={ClassNames.twotext}>\n            <div>Speed: {this.props.CurrentweatherData.wind.speed} m/sec</div>\n            <div>Deg: {this.props.CurrentweatherData.wind.deg}°</div>\n          </div>\n        </div>\n\n        <div className={ClassNames.currentweatherdetails}>\n          <div className={ClassNames.twotext}>\n            <div>Sunrise: {this.gettime(this.props.CurrentweatherData.sys.sunrise)}</div>\n            <div>Sunset: {this.gettime(this.props.CurrentweatherData.sys.sunset)}</div>\n          </div>\n        </div>\n\n\n        {/* last update {this.getdatetime(this.props.CurrentweatherData.dt)} */}\n      </div >\n    );\n  }\n}\n\nexport default CurrentWeatherDetails;\n","import React, { Component } from 'react';\nimport ClassNames from './hourlyweatherdetails.module.css';\nimport WeatherIcon from 'react-icons-weather';\n\n\nclass HourlyWeatherDetails extends Component {\n\n    state = {\n        ExtraDetails: [],\n        clicked: false,\n    }\n\n\n    gettime(UNIX_timestamp) {\n        var AmorPm = \"am\"\n        var a = new Date(UNIX_timestamp * 1000);\n        var hour = \"0\" + a.getHours();\n        var min = \"0\" + a.getMinutes();\n        if (hour > 12) {\n            hour = \"0\" + (hour - 12)\n            AmorPm = \"pm\";\n        }\n        var datetime = hour.substr(-2) + ':' + min.substr(-2) + AmorPm;\n        return datetime;\n    }\n\n    getday(UNIX_timestamp) {\n        var day = ['Mon', 'Tue', 'Wed', 'Thru', 'Fri', 'Sat', 'Sun'];\n        var a = new Date(UNIX_timestamp * 1000)\n        var dayOfWeek = require('day-of-week').get\n        var b = day[dayOfWeek(new Date(a.getFullYear(), a.getMonth(), a.getDate()), 'America/Los_Angeles')]\n        return b;\n    }\n\n    showExtraDetails = (extra) => {\n        if (extra === this.state.ExtraDetails) {\n            this.setState({ clicked: !this.state.clicked })\n        }\n        else {\n            this.setState({ clicked: true })\n        }\n        this.setState({ ExtraDetails: extra })\n        //console.log(a.getFullYear()+\"/\"+a.getMonth()+\"/\"+a.getDate())\n    }\n    clickedtofalse=()=>{\n        this.setState({clicked:false},()=>{\n            console.log(this.state.clicked)})\n    }\n    render() {\n\n        return (\n            <div className={ClassNames.body}>\n                <div className={ClassNames.topic}>Hourly Forcast</div>\n                <div className={ClassNames.lines} />\n                <div className={ClassNames.section}>\n                    {this.props.HourlyWeatherData.slice(0, 20).map(content => (\n                        <div\n                            className={this.state.clicked && this.state.ExtraDetails === content ? ClassNames.eachSectionclicked : ClassNames.eachSection}\n                            onClick={() => this.showExtraDetails(content)}\n                            key={content.dt}>\n                            <WeatherIcon\n                                name=\"owm\"\n                                className={ClassNames.smallicon}\n                                iconId={String(content.weather.map(value => value.id))}\n                                flip=\"horizontal\"\n                                rotate=\"90\" />\n                            <br />\n                            <div>{(content.main.temp - 273.15).toFixed(2)}°C</div>\n                            <div>{this.gettime(content.dt)}</div>\n                            <div>{this.getday(content.dt)}</div>\n                        </div>\n                    ))}\n                </div>\n                {\n                    this.state.clicked? (\n                        <div className={ClassNames.ExtraDetails}>\n                            <div className={ClassNames.iconsection}>\n                                <WeatherIcon className={ClassNames.icon} name=\"owm\" iconId={String(this.state.ExtraDetails.weather.map(value => value.id))} flip=\"horizontal\" rotate=\"90\" />\n\n                                <div>{this.state.ExtraDetails.weather.map(content => {\n                                    return (content.description.charAt(0).toUpperCase() + content.description.slice(1))\n                                })}\n                                </div>\n                            </div>\n\n                            <div className={ClassNames.text}>\n                                \n                                <div>\n                                    Temp: {(this.state.ExtraDetails.main.temp - 273.15).toFixed(2)}°C\n                                </div>\n                                <div>\n                                    Max Temp: ↑{(this.state.ExtraDetails.main.temp_max - 273.15).toFixed(2)}°C\n                                </div>\n                                <div>\n                                    Min Temp: ↓{(this.state.ExtraDetails.main.temp_min - 273.15).toFixed(2)}°C\n                                </div>\n                                <div>\n                                    Pressure: {this.state.ExtraDetails.main.pressure} hPa\n                                </div>\n                                <div>\n                                    Humidity: {this.state.ExtraDetails.main.humidity} %\n                                </div>\n                            </div>\n                        </div>\n\n                    ) : null\n                }\n                <div className={ClassNames.lines} />\n            </div >\n        );\n    }\n}\n\nexport default HourlyWeatherDetails;\n","import React from 'react';\nimport classNames from \"./footer.module.css\";\nimport ReactLoading from 'react-loading';\n\n\nconst Footer = (props) => (\n  <div className={classNames.image}>\n    <div className={classNames.footer}>\n      <div style={{ display: \"flex\", flex: \"1\" }} />\n      <div className={classNames.footercontent}>\n        <div>Developed by : <b>Sourav Dey</b></div>\n        {/* <div>Click here for Source Code:  <a className={classNames.a} href=\"https://github.com/Souravdey777/weather-app\"><b><img src={githublogo} style={{width:\"12px\",height:\"12px\"}}/></b></a></div> */}\n        <div>Powered by : <a className={classNames.a} href=\"https://openweathermap.org\"><b>OpenWeatherMapAPI</b></a></div>\n        <div className={classNames.update}>\n          Last Updated : {props.datetime}&nbsp;&nbsp;&nbsp;\n        {props.show?<i className=\"fa\" onClick={props.updateButtonClicked} >&#xf021;</i>:<ReactLoading onClick={props.updateButtonClicked} type=\"spinningBubbles\" color=\"#fff\" height=\"13px\" width=\"13px\" />}\n        </div>\n      </div>\n    </div>\n  </div>\n)\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport ClassNames from './AppContainer.module.css';\nimport TemperatureModal from '../../components/temperatureModal/temperatureModal';\nimport axios from 'axios';\nimport CurrentWeatherDetails from '../../components/currentweatherdetails/currentweatherdetails';\nimport HourlyWeatherDetails from '../../components/hourlyweatherdetails/hourlyweatherdetails';\nimport Footer from '../../components/footer/footer';\nclass AppContainer extends Component {\n    state = {\n        datetime: null,\n        latitude: null,\n        longitude: null,\n        API_KEY: `9ed5e07cc11f0ef0a18b03f79dde4029`,\n        weatherData: {\n            base: \"\",\n            clouds: {},\n            cod: null,\n            coord: {},\n            dt: null,\n            id: null,\n            main: {},\n            name: \"\",\n            sys: {},\n            visibility: null,\n            weather: [],\n            length: null,\n            wind: {}\n        },\n        hourlyData: [],\n        night: false,\n        alldatafetched: false\n    }\n\n    componentDidMount() {\n        this.getlocation();\n\n    }\n\n    updateButtonClicked = () => {\n        this.setState({ alldatafetched: false, hourlyData: [] })\n        this.getlocation();\n        this.refs.HourlyWeatherDetails.clickedtofalse();\n    }\n\n\n\n    getlocation = () => {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(position => {\n                console.log(position.coords.latitude)\n                console.log(position.coords.longitude)\n                this.setState({ latitude: position.coords.latitude, longitude: position.coords.longitude }, () => {\n                    this.getWeather();\n                })\n            });\n        }\n        var today = new Date();\n        var date = today.getDate() + '/' + (today.getMonth() + 1) + \" \" + (\"0\" + today.getHours()).substr(-2) + ':' + (\"0\" + today.getMinutes()).substr(-2);\n        this.setState({ datetime: date });\n    }\n\n    getWeather = () => {\n\n        axios.all([\n            axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${this.state.latitude}&lon=${this.state.longitude}&APPID=${this.state.API_KEY}`),\n            axios.get(`https://api.openweathermap.org/data/2.5/forecast/hourly?lat=${this.state.latitude}&lon=${this.state.longitude}&APPID=${this.state.API_KEY}`)\n        ]).then(axios.spread((response1, response2) => {\n            const weatherData = response1.data;\n            console.log(weatherData);\n            this.setState({ weatherData: weatherData }, () => {\n                this.nightchecker();\n                this.setState({ alldatafetched: true })\n            });\n            const hourlyData = response2.data.list;\n            console.log(hourlyData);\n            this.setState({ hourlyData: hourlyData });\n        }))\n            .catch(error => {\n                console.log(error);\n                this.setState({ error: error });\n            });\n\n        // previous code\n\n        //Current forcast\n        // axios\n        //     .get(`https://api.openweathermap.org/data/2.5/weather?lat=${this.state.latitude}&lon=${this.state.longitude}&APPID=${this.state.API_KEY}`)\n        //     .then(response => {\n        // const weatherData = response.data;\n        // console.log(weatherData);\n        // this.setState({ weatherData: weatherData }, () => {\n        //     this.nightchecker();\n        //     this.setState({ alldatafetched: true })\n        // });\n\n        //     })\n        //     .catch(error => {\n        //         console.log(error);\n        //         this.setState({ error: error });\n        //     });\n        // //Hourly forcast\n        // axios\n        //     .get(`https://api.openweathermap.org/data/2.5/forecast/hourly?lat=${this.state.latitude}&lon=${this.state.longitude}&APPID=${this.state.API_KEY}`)\n        //     .then(response => {\n        //         const hourlyData = response.data.list;\n        //         console.log(hourlyData);\n        //         this.setState({ hourlyData: hourlyData }, () => {\n        //         });\n        //     })\n        //     .catch(error => {\n        //         console.log(error);\n        //         this.setState({ error: error });\n        //     });\n        // //Daily forcast is not working with this api \n        // axios\n        //     .get(`https://api.openweathermap.org/data/2.5/forecast/daily?lat=${this.state.latitude}&lon=${this.state.longitude}&cnt=5&APPID=${this.state.API_KEY}`)\n        //     .then(response => {\n        //         const dailyData = response.data.list;\n        //         console.log(dailyData);\n        //         this.setState({ dailyData: dailyData }, () => {\n        //         });\n        //     })\n        //     .catch(error => {\n        //         console.log(error);\n        //         this.setState({ error: error });\n        //     });\n    }\n\n    nightchecker = () => {\n\n        // console.log(this.state.weatherData.sys.sunset);\n        if (this.state.weatherData.sys.sunset > this.state.weatherData.dt && this.state.weatherData.sys.sunrise < this.state.weatherData.dt) {\n            this.setState({ night: false })\n        }\n        else {\n            this.setState({ night: true })\n        }\n    }\n\n\n    render() {\n        return (\n            <div className={ClassNames.AppContainer} style={this.state.night ? {\n                background: \"rgb(0, 88, 240)\",\n                background: \"linear-gradient(0deg, rgb(0, 88, 240) 0%, rgb(1, 41, 109) 100%)\"\n            } : {\n                    background: \"gb(122, 170, 254)\",\n                    background: \"linear-gradient(0deg, rgb(122, 170, 254) 0%, rgb(0, 92, 250) 100%)\"\n                }}>\n                <TemperatureModal weatherData={this.state.weatherData} />\n                <CurrentWeatherDetails CurrentweatherData={this.state.weatherData} />\n                <HourlyWeatherDetails ref=\"HourlyWeatherDetails\" HourlyWeatherData={this.state.hourlyData} />\n                <Footer datetime={this.state.datetime} updateButtonClicked={this.updateButtonClicked} show={this.state.alldatafetched} />\n            </div>\n        );\n    }\n}\n\nexport default AppContainer;\n","import React, { Component } from 'react';\nimport './App.css';\nimport AppContainer from './containers/AppContainer/AppContainer';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <AppContainer/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tempModal\":\"temperatureModal_tempModal__fja7a\",\"temp\":\"temperatureModal_temp__3HBas\",\"maxmixtemp\":\"temperatureModal_maxmixtemp__2JbEq\",\"city\":\"temperatureModal_city__39b3F\",\"description\":\"temperatureModal_description__1wMy3\"};"],"sourceRoot":""}