{"version":3,"sources":["components/currentweatherdetails/currentweatherdetails.module.css","components/footer/footer.module.css","containers/AppContainer/AppContainer.module.css","components/hourlyweatherdetails/hourlyweatherdetails.module.css","components/temperatureModal/temperatureModal.js","components/currentweatherdetails/currentweatherdetails.js","components/hourlyweatherdetails/OpenWeatherMapIcons/OpenWeatherMapIcons.js","components/hourlyweatherdetails/hourlyweatherdetails.js","components/footer/footer.js","containers/hoc/Aux.js","containers/AppContainer/AppContainer.js","App.js","serviceWorker.js","index.js","components/temperatureModal/temperatureModal.module.css"],"names":["module","exports","body","currentweatherdetails","lines","topic","text","twotext","image","a","footer","footercontent","update","AppContainer","Loading","section","eachSection","eachSectionclicked","ExtraDetails","iconsection","TemperatureModal","tempModal","React","createRef","description","maxmixtemp","handleScroll","window","scrollY","_this","current","style","width","height","opacity","removeEventListener","this","addEventListener","getName","require","react_default","createElement","props","weatherData","ref","className","ClassNames","color","concat","backgroundcolor","build_default","icon","iconString","size","animate","weather","map","content","charAt","toUpperCase","slice","temp","main","toFixed","temp_max","temp_min","sys","country","city","name","Component","CurrentWeatherDetails","UNIX_timestamp","Date","year","getFullYear","month","getMonth","date","getDate","hour","getHours","min","getMinutes","sec","getSeconds","substr","AmorPm","CurrentweatherData","fontSize","humidity","pressure","clouds","all","wind","speed","deg","gettime","sunrise","sunset","OpenWeatherMapIcons","night","iconid","HourlyWeatherDetails","state","clicked","showExtraDetails","extra","setState","clickedtofalse","console","log","dayOfWeek","get","_this2","HourlyWeatherData","onClick","key","dt","hourlyweatherdetails_OpenWeatherMapIcons_OpenWeatherMapIcons","value","id","pod","getday","Footer","classNames","display","flex","href","datetime","show","updateButtonClicked","react_loading_default","type","Aux","children","latitude","longitude","API_KEY","base","cod","coord","visibility","length","hourlyData","alldatafetched","weatherIconManager","Main","Icon","background","backgroundgradient","backgroundString","getlocation","refs","navigator","geolocation","getCurrentPosition","position","coords","getWeather","axios","then","spread","response1","response2","data","nightchecker","list","catch","error","iconStringHandler","iconstring","backgroundstring","hoc_Aux","Object","defineProperty","temperatureModal","hourlyweatherdetails","weatherDataSun","App","containers_AppContainer_AppContainer","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.fe34795b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"currentweatherdetails_body__3wfSf\",\"currentweatherdetails\":\"currentweatherdetails_currentweatherdetails__3fRHn\",\"lines\":\"currentweatherdetails_lines__1LY9S\",\"topic\":\"currentweatherdetails_topic__1x09H\",\"text\":\"currentweatherdetails_text__3bqSf\",\"twotext\":\"currentweatherdetails_twotext__1xJzK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"footer_image__1rT76\",\"a\":\"footer_a__3Mmu2\",\"footer\":\"footer_footer__195St\",\"footercontent\":\"footer_footercontent__3SYiD\",\"update\":\"footer_update__3QxBl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppContainer\":\"AppContainer_AppContainer__2NJBC\",\"Loading\":\"AppContainer_Loading__29nzL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"hourlyweatherdetails_body__Tvb0z\",\"lines\":\"hourlyweatherdetails_lines__3BTZV\",\"topic\":\"hourlyweatherdetails_topic__1Lu_B\",\"section\":\"hourlyweatherdetails_section__hLDD_\",\"eachSection\":\"hourlyweatherdetails_eachSection__3Sxyq\",\"eachSectionclicked\":\"hourlyweatherdetails_eachSectionclicked__37TTY\",\"ExtraDetails\":\"hourlyweatherdetails_ExtraDetails__RFsmW\",\"iconsection\":\"hourlyweatherdetails_iconsection__GTmDQ\",\"text\":\"hourlyweatherdetails_text__1sC3K\"};","import React, { Component } from 'react';\r\nimport ClassNames from './temperatureModal.module.css';\r\nimport ReactAnimatedWeather from 'react-animated-weather';\r\n\r\n\r\nlet lastScrollY = 0;\r\nclass TemperatureModal extends Component {\r\n\r\n    componentWillMount() {\r\n        window.removeEventListener('scroll', this.handleScroll);\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('scroll', this.handleScroll);\r\n    }\r\n\r\n    tempModal = React.createRef();\r\n    description = React.createRef();\r\n    maxmixtemp = React.createRef();\r\n\r\n    handleScroll = () => {\r\n        lastScrollY = window.scrollY;\r\n\r\n        if (lastScrollY > 50) {\r\n            this.tempModal.current.style.width = \"100px\";\r\n            this.tempModal.current.style.height = \"100px\";\r\n            this.description.current.style.opacity = \"0\";\r\n            this.maxmixtemp.current.style.opacity = \"0\";\r\n        }\r\n        else {\r\n            this.tempModal.current.style.width = \"300px\";\r\n            this.tempModal.current.style.height = \"300px\";\r\n            this.description.current.style.opacity = \"1\";\r\n            this.maxmixtemp.current.style.opacity = \"1\";\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { getName } = require('country-list');\r\n        return (\r\n            <div>\r\n                {this.props.weatherData? (\r\n                    <div ref={this.tempModal} className={ClassNames.tempModal} style={{\r\n                        color: `${this.props.backgroundcolor}`\r\n                    }}>\r\n                        <div ref={this.description} className={ClassNames.description}>\r\n                            <ReactAnimatedWeather\r\n                                icon={this.props.iconString}\r\n                                color={this.props.backgroundcolor}\r\n                                size={150}\r\n                                animate={true}\r\n                            />\r\n                            <br />\r\n                            {this.props.weatherData.weather.map(content => {\r\n                                return (content.description.charAt(0).toUpperCase() + content.description.slice(1))\r\n                            })}\r\n                            <br />\r\n                        </div>\r\n                        <div className={ClassNames.temp}>\r\n                            {(this.props.weatherData.main.temp - 273.15).toFixed(2)}°C\r\n                            <div ref={this.maxmixtemp} className={ClassNames.maxmixtemp} >\r\n                                <div>↑{(this.props.weatherData.main.temp_max - 273.15).toFixed(2)}°C</div>\r\n                                <div>↓{(this.props.weatherData.main.temp_min - 273.15).toFixed(2)}°C</div>\r\n                            </div>\r\n                        </div>\r\n                        {this.props.weatherData.sys.country?\r\n                        <div className={ClassNames.city}>\r\n                            {this.props.weatherData.name}, {\r\n                                getName(`${this.props.weatherData.sys.country}`)}\r\n                        </div>:null}\r\n                    </div>) : null\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TemperatureModal;\r\n","import React, { Component } from 'react';\nimport ClassNames from './currentweatherdetails.module.css';\n\nclass CurrentWeatherDetails extends Component {\n\n  getdatetime(UNIX_timestamp) {\n    var a = new Date(UNIX_timestamp * 1000);\n    var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    var year = a.getFullYear();\n    var month = months[a.getMonth()];\n    var date = a.getDate();\n    var hour = \"0\" + a.getHours();\n    var min = \"0\" + a.getMinutes();\n    var sec = \"0\" + a.getSeconds();\n    var datetime = date + ' ' + month + ' ' + year + ' ' + hour.substr(-2) + ':' + min.substr(-2) + ':' + sec.substr(-2);\n    return datetime;\n  }\n  gettime(UNIX_timestamp) {\n    var AmorPm = \"am\"\n    var a = new Date(UNIX_timestamp * 1000);\n    var hour = \"0\" + a.getHours();\n    var min = \"0\" + a.getMinutes();\n    if (hour > 12) {\n      hour = \"0\" + (hour - 12)\n      AmorPm = \"pm\";\n    }\n    var datetime = hour.substr(-2) + ':' + min.substr(-2) + AmorPm;\n    return datetime;\n  }\n\n  render() {\n    return (\n     \n      <div className={ClassNames.body}>\n\n        <div className={ClassNames.currentweatherdetails}>\n          <div className={ClassNames.topic}>Temperature</div>\n          <div className={ClassNames.lines} />\n          <div className={ClassNames.twotext}>\n            <div>↓{(this.props.CurrentweatherData.main.temp_min - 273.15).toFixed(2)}°C</div>\n            |\n            <div style={{fontSize:\"22px\"}}>{(this.props.CurrentweatherData.main.temp - 273.15).toFixed(2)}°C</div>\n            |\n            <div>↑{(this.props.CurrentweatherData.main.temp_max - 273.15).toFixed(2)}°C</div>\n          </div>\n        </div>\n        <div className={ClassNames.currentweatherdetails}>\n          <div className={ClassNames.topic}>Humidity</div>\n          <div className={ClassNames.lines} />\n          <div className={ClassNames.text}>\n            {this.props.CurrentweatherData.main.humidity} %\n          </div>\n        </div>\n\n        <div className={ClassNames.currentweatherdetails}>\n          <div className={ClassNames.topic}>Pressure</div>\n          <div className={ClassNames.lines} />\n          <div className={ClassNames.text}>\n            {this.props.CurrentweatherData.main.pressure} hPa\n          </div>\n        </div>\n\n        <div className={ClassNames.currentweatherdetails}>\n          <div className={ClassNames.topic}>Cloudiness</div>\n          <div className={ClassNames.lines} />\n          <div className={ClassNames.text}>\n           {this.props.CurrentweatherData.clouds.all}%\n          </div>\n        </div>\n\n        <div className={ClassNames.currentweatherdetails}>\n          <div className={ClassNames.topic}>Wind</div>\n          <div className={ClassNames.lines} />\n          <div className={ClassNames.twotext}>\n            <div>Speed: {this.props.CurrentweatherData.wind.speed} m/sec</div>\n            <div>Deg: {this.props.CurrentweatherData.wind.deg}°</div>\n          </div>\n        </div>\n\n        <div className={ClassNames.currentweatherdetails}>\n          <div className={ClassNames.twotext}>\n            <div>↑Sunrise: {this.gettime(this.props.CurrentweatherData.sys.sunrise)}</div>\n            <div>↓Sunset: {this.gettime(this.props.CurrentweatherData.sys.sunset)}</div>\n          </div>\n        </div>\n\n\n        {/* last update {this.getdatetime(this.props.CurrentweatherData.dt)} */}\n      </div >\n    );\n  }\n}\n\nexport default CurrentWeatherDetails;\n","import './css/openweathermapicon.css';\r\nimport React from \"react\";\r\n\r\nconst OpenWeatherMapIcons = props =>{\r\n    const { night, iconid, color, size } = props;\r\n  return (\r\n    <i\r\n      style={{\r\n        fontSize: `${size}px`,\r\n        color: `${color}`\r\n      }}\r\n      className={\"wi wi-owm-\" + (iconid === \"771\" || iconid === \"901\" || iconid === \"905\"\r\n        ? \"\" : (night ? \"night-\" : \"day-\")) + iconid}></i>\r\n  );\r\n}\r\n\r\nexport default OpenWeatherMapIcons;","import React, { Component } from 'react';\nimport ClassNames from './hourlyweatherdetails.module.css';\nimport OpenWeatherMapIcons from './OpenWeatherMapIcons/OpenWeatherMapIcons';\n\n\nclass HourlyWeatherDetails extends Component {\n\n    state = {\n        ExtraDetails: [],\n        clicked: false,\n    }\n\n\n    gettime(UNIX_timestamp) {\n        var AmorPm = \"am\"\n        var a = new Date(UNIX_timestamp * 1000);\n        var hour = \"0\" + a.getHours();\n        var min = \"0\" + a.getMinutes();\n        if (hour > 12) {\n            hour = \"0\" + (hour - 12)\n            AmorPm = \"pm\";\n        }\n        var datetime = hour.substr(-2) + ':' + min.substr(-2) + AmorPm;\n        return datetime;\n    }\n\n    getday(UNIX_timestamp) {\n        var day = ['Mon', 'Tue', 'Wed', 'Thru', 'Fri', 'Sat', 'Sun'];\n        var a = new Date(UNIX_timestamp * 1000)\n        var dayOfWeek = require('day-of-week').get\n        var b = day[dayOfWeek(new Date(a.getFullYear(), a.getMonth(), a.getDate()), 'America/Los_Angeles')]\n        return b;\n    }\n\n    showExtraDetails = (extra) => {\n        if (extra === this.state.ExtraDetails) {\n            this.setState({ clicked: !this.state.clicked })\n        }\n        else {\n            this.setState({ clicked: true })\n        }\n        this.setState({ ExtraDetails: extra })\n        //console.log(a.getFullYear()+\"/\"+a.getMonth()+\"/\"+a.getDate())\n    }\n    clickedtofalse = () => {\n        this.setState({ clicked: false }, () => {\n            console.log(this.state.clicked)\n        })\n    }\n    render() {\n\n        return (\n            <div className={ClassNames.body}>\n                <div className={ClassNames.topic}>Hourly Forcast</div>\n                <div className={ClassNames.lines} />\n                <div className={ClassNames.section}>\n                    {this.props.HourlyWeatherData.slice(0, 30).map(content => (\n                        <div\n                            className={this.state.clicked && this.state.ExtraDetails === content ? ClassNames.eachSectionclicked : ClassNames.eachSection}\n                            onClick={() => this.showExtraDetails(content)}\n                            key={content.dt}>\n                            <OpenWeatherMapIcons\n                                iconid={content.weather.map(value => value.id)}\n                                night={content.sys.pod === \"n\" ? true : false}\n                                size=\"25\"\n                            />\n                            <br />\n                            <div>{(content.main.temp - 273.15).toFixed(2)}°C</div>\n                            <div>{this.gettime(content.dt)}</div>\n                            <div>{this.getday(content.dt)}</div>\n                        </div>\n                    ))}\n                </div>\n                {\n                    this.state.clicked ? (\n                        <div className={ClassNames.ExtraDetails}>\n                            <div className={ClassNames.iconsection}>\n                                <OpenWeatherMapIcons\n                                    iconid={this.state.ExtraDetails.weather.map(value => value.id)}\n                                    night={this.state.ExtraDetails.sys.pod === \"n\" ? true : false}\n                                    size=\"64\"\n                                /><br />\n                                <div><b>{this.state.ExtraDetails.weather.map(content => {\n                                    return (content.description.charAt(0).toUpperCase() + content.description.slice(1))\n                                })}</b>\n                                </div>\n                            </div>\n\n                            <div className={ClassNames.text}>\n\n\n                                <div >\n                                    Temp.: {(this.state.ExtraDetails.main.temp - 273.15).toFixed(2)}°C\n                                </div>\n                                <div>\n                                    Min Temp.: ↓{(this.state.ExtraDetails.main.temp_min - 273.15).toFixed(2)}°C\n                                </div>\n                                <div>\n                                    Max Temp.: ↑{(this.state.ExtraDetails.main.temp_max - 273.15).toFixed(2)}°C\n                                </div>\n                                <div>\n                                    Pressure: {this.state.ExtraDetails.main.pressure} hPa\n                                </div>\n                                <div>\n                                    Humidity: {this.state.ExtraDetails.main.humidity} %\n                                </div>\n                            </div>\n                        </div>\n\n                    ) : null\n                }\n                <div className={ClassNames.lines} />\n            </div >\n        );\n    }\n}\n\nexport default HourlyWeatherDetails;","import React from 'react';\nimport classNames from \"./footer.module.css\";\nimport ReactLoading from 'react-loading';\n\n\nconst Footer = (props) => (\n  <div className={classNames.image}>\n    <div className={classNames.footer}>\n      <div style={{ display: \"flex\", flex: \"1\" }} />\n      <div className={classNames.footercontent}>\n        <div>Developed by : <b>Sourav Dey</b></div>\n        {/* <div>Click here for Source Code:  <a className={classNames.a} href=\"https://github.com/Souravdey777/weather-app\"><b><img src={githublogo} style={{width:\"12px\",height:\"12px\"}}/></b></a></div> */}\n        <div>Powered by : <a className={classNames.a} href=\"https://openweathermap.org\"><b>OpenWeatherMapAPI</b></a></div>\n        <div className={classNames.update}>\n          Last Updated : {props.datetime}&nbsp;&nbsp;&nbsp;\n        {props.show?<i className=\"fa\" onClick={props.updateButtonClicked} >&#xf021;</i>:<ReactLoading onClick={props.updateButtonClicked} type=\"spinningBubbles\" color=\"#fff\" height=\"13px\" width=\"13px\" />}\n        </div>\n      </div>\n    </div>\n  </div>\n)\n\nexport default Footer;\n","const Aux=(props)=>props.children;\nexport default Aux;","import React, { Component } from 'react';\nimport ClassNames from './AppContainer.module.css';\nimport TemperatureModal from '../../components/temperatureModal/temperatureModal';\nimport axios from 'axios';\nimport CurrentWeatherDetails from '../../components/currentweatherdetails/currentweatherdetails';\nimport HourlyWeatherDetails from '../../components/hourlyweatherdetails/hourlyweatherdetails';\nimport Footer from '../../components/footer/footer';\nimport Aux from '../hoc/Aux';\n\nclass AppContainer extends Component {\n    state = {\n        datetime: null,\n        latitude: null,\n        longitude: null,\n        API_KEY: `9ed5e07cc11f0ef0a18b03f79dde4029`,\n        weatherData: {\n            base: \"\",\n            clouds: {},\n            cod: null,\n            coord: {},\n            dt: null,\n            id: null,\n            main: {},\n            name: \"\",\n            sys: {},\n            wind: {},\n            visibility: null,\n            weather: [],\n            length: null,\n        },\n        hourlyData: [],\n        night: false,\n        alldatafetched: false,\n        weatherIconManager: [\n            {\n                Main: \"Thunderstorm\",\n                Icon: \"SLEET\",\n                backgroundcolor: {\n                    background: \"rgb(33, 33, 33)\",\n                    backgroundgradient: \"linear-gradient(0deg, rgb(122, 183, 249) 0%,  rgb(33, 33, 33) 100%)\"\n                }\n            },\n            {\n                Main: \"Drizzle\",\n                Icon: \"RAIN\",\n                backgroundcolor: {\n                    background: \"rgb(0, 50, 111)\",\n                    backgroundgradient: \"linear-gradient(0deg, rgb(122, 183, 249) 0%,  rgb(0, 50, 111) 100%)\"\n                }\n            },\n            {\n                Main: \"Rain\",\n                Icon: \"RAIN\",\n                backgroundcolor: {\n                    background: \"rgb(0, 50, 111)\",\n                    backgroundgradient: \"linear-gradient(0deg, rgb(122, 183, 249) 0%,  rgb(0, 50, 111) 100%)\"\n                }\n            },\n            {\n                Main: \"Snow\",\n                Icon: \"SNOW\",\n                backgroundcolor: {\n                    background: \"rgb(123, 176, 255)\",\n                    backgroundgradient: \"linear-gradient(0deg, rgb(177, 205, 247) 0%, rgb(123, 176, 255) 100%)\"\n                }\n            },\n            {\n                Main: \"Fog\",\n                Icon: \"FOG\",\n                backgroundcolor: {\n                    background: \"rgb(69, 139, 245)\",\n                    backgroundgradient: \"linear-gradient(0deg, rgb(152, 229, 252) 0%, rgb(69, 139, 245) 100%)\"\n                }\n            },\n            {\n                Main: \"Mist\",\n                Icon: \"FOG\",\n                backgroundcolor: {\n                    background: \"rgb(69, 139, 245)\",\n                    backgroundgradient: \"linear-gradient(0deg, rgb(152, 229, 252) 0%, rgb(69, 139, 245) 100%)\"\n                }\n            },\n            {\n                Main: \"Haze\",\n                Icon: \"FOG\",\n                backgroundcolor: {\n                    background: \"rgb(69, 139, 245)\",\n                    backgroundgradient: \"linear-gradient(0deg, rgb(152, 229, 252) 0%, rgb(69, 139, 245) 100%)\"\n                }\n            },\n            {\n                Main: \"Clear\",\n                Icon: \"CLEAR\",\n                backgroundcolor: {\n                    background: \"rgb(50, 183, 255)\",\n                    backgroundgradient: \"linear-gradient(0deg, rgba(255,222,170,1) 0%, rgb(50, 183, 255) 100%)\"\n                }\n            },\n            {\n                Main: \"Clouds\",\n                Icon: \"PARTLY_CLOUDY\",\n                backgroundcolor: {\n                    background: \"rgb(50, 183, 255)\",\n                    backgroundgradient: \"linear-gradient(0deg, rgba(255,222,170,1) 0%, rgb(50, 183, 255) 100%)\"\n                }\n            },\n        ],\n        iconString: \"CLOUDY\",\n        backgroundString: {\n            background: \"rgb(0, 92, 250)\",\n            backgroundgradient: \"linear-gradient(0deg, rgb(122, 170, 254) 0%, rgb(0, 92, 250) 100%)\",\n\n        }\n    }\n\n    componentDidMount() {\n        this.getlocation();\n    }\n\n    updateButtonClicked = () => {\n        this.getlocation();\n        this.refs.HourlyWeatherDetails.clickedtofalse();\n        this.setState({ alldatafetched: false })\n    }\n\n\n    getlocation = () => {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(position => {\n                console.log(position.coords.latitude)\n                console.log(position.coords.longitude)\n                this.setState({ latitude: position.coords.latitude, longitude: position.coords.longitude }, () => {\n                    this.getWeather();\n                })\n            });\n        }\n        this.gettime();\n    }\n\n\n    gettime() {\n        var AmorPm = \"am\"\n        var a = new Date();\n        var hour = \"0\" + a.getHours();\n        var min = \"0\" + a.getMinutes();\n        if (hour > 12) {\n            hour = \"0\" + (hour - 12)\n            AmorPm = \"pm\";\n        }\n        var date = a.getDate() + '/' + (a.getMonth() + 1) + \" \" + hour.substr(-2) + ':' + min.substr(-2) + AmorPm;\n        this.setState({ datetime: date });\n    }\n\n    getWeather = () => {\n        axios.all([\n            axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${this.state.latitude}&lon=${this.state.longitude}&APPID=${this.state.API_KEY}`),\n            axios.get(`https://api.openweathermap.org/data/2.5/forecast/hourly?lat=${this.state.latitude}&lon=${this.state.longitude}&APPID=${this.state.API_KEY}`)\n        ]).then(axios.spread((response1, response2) => {\n            const weatherData = response1.data;\n            //console.log(weatherData);\n            this.setState({ weatherData: weatherData }, () => {\n                this.nightchecker();\n                this.setState({ alldatafetched: true });\n            });\n            const hourlyData = response2.data.list;\n            //console.log(hourlyData);\n            this.setState({ hourlyData: hourlyData });\n        }))\n            .catch(error => {\n                //console.log(error);\n                this.setState({ error: error });\n            });\n\n        // //Daily forcast is not working with this api \n\n    }\n\n    nightchecker = () => {\n\n        // console.log(this.state.weatherData.sys.sunset);\n        if (this.state.weatherData.sys.sunset > this.state.weatherData.dt && this.state.weatherData.sys.sunrise < this.state.weatherData.dt) {\n            this.setState({ night: false }, () => { this.iconStringHandler(); })\n        }\n        else {\n            this.setState({ night: true }, () => { this.iconStringHandler(); })\n        }\n    }\n\n    iconStringHandler = () => {\n        var iconstring = \"PARTLY_CLOUDY\" + (!this.state.night ? \"_DAY\" : \"_NIGHT\")\n        var backgroundstring = {};\n        this.state.weatherIconManager.map(weatherIconManager => {\n            if (weatherIconManager.Main === this.state.weatherData.weather.map(content => content.main)[0]) {\n                // console.log(weatherIconManager.Main)\n                if (weatherIconManager.Main === \"Clear\") {\n                    // console.log(String(weatherIconManager.Icon+(!this.state.night?\"_DAY\":\"_NIGHT\")))\n                    iconstring = weatherIconManager.Icon + (!this.state.night ? \"_DAY\" : \"_NIGHT\")\n                }\n                else if (weatherIconManager.Main === \"Clouds\") {\n                    //console.log(this.state.weatherData.weather.map(content => content.description)[0]);\n                    if (this.state.weatherData.weather.map(content => content.description)[0] === \"broken clouds\" ||\n                        this.state.weatherData.weather.map(content => content.description)[0] === \"overcast clouds\") {\n                        iconstring = \"CLOUDY\"\n                    }\n                    else {\n                        // console.log(String(weatherIconManager.Icon+(!this.state.night?\"_DAY\":\"_NIGHT\")))\n                        iconstring = weatherIconManager.Icon + (!this.state.night ? \"_DAY\" : \"_NIGHT\")\n                    }\n\n                }\n                else {\n                    iconstring = weatherIconManager.Icon\n                }\n\n                backgroundstring = weatherIconManager.backgroundcolor\n            }\n            return 0;\n        })\n        // console.log(backgroundstring)\n        // console.log(iconstring)\n        this.setState({ iconString: iconstring, backgroundString: backgroundstring })\n\n    }\n\n\n    render() {\n        return (\n            <Aux>\n                {this.state.error ? <div className={ClassNames.Loading}>\n                            <h1>Network Issue</h1>\n                        </div> :\n                    this.state.weatherData.length === null ?\n                        <div className={ClassNames.Loading}>\n                            <h1>Loading...</h1>\n                        </div> :\n                        <div className={ClassNames.AppContainer}\n                            style={this.state.night &&  (this.state.iconString!==\"SLEET\" && this.state.iconString!==\"RAIN\")? {\n                                background: \"rgb(1, 41, 109)\",\n                                background: \"linear-gradient(0deg, rgb(0, 88, 240) 0%, rgb(1, 41, 109) 100%)\"\n\n                            } : {\n                                    background: `${this.state.backgroundString.background}`,\n                                    background: `${this.state.backgroundString.backgroundgradient}`\n                                }}\n                        >\n\n                            <TemperatureModal\n                                backgroundcolor={this.state.night ? \"rgb(1, 41, 109)\" : this.state.backgroundString.background}\n                                iconString={this.state.iconString}\n                                weatherData={this.state.weatherData}\n                                night={this.state.night} />\n                            <CurrentWeatherDetails CurrentweatherData={this.state.weatherData} />\n                            <HourlyWeatherDetails ref=\"HourlyWeatherDetails\" HourlyWeatherData={this.state.hourlyData} weatherDataSun={this.state.weatherData.sys} />\n                            <Footer datetime={this.state.datetime} updateButtonClicked={this.updateButtonClicked} show={this.state.alldatafetched} />\n                        </div>\n                }\n            </Aux>\n        );\n    }\n}\n\nexport default AppContainer;\n","import React, { Component } from 'react';\nimport './App.css';\nimport AppContainer from './containers/AppContainer/AppContainer';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <AppContainer/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tempModal\":\"temperatureModal_tempModal__fja7a\",\"temp\":\"temperatureModal_temp__3HBas\",\"maxmixtemp\":\"temperatureModal_maxmixtemp__2JbEq\",\"city\":\"temperatureModal_city__39b3F\",\"description\":\"temperatureModal_description__1wMy3\"};"],"sourceRoot":""}