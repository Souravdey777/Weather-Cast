{"version":3,"sources":["components/currentweatherdetails/currentweatherdetails.module.css","components/footer/footer.module.css","components/hourlyweatherdetails/hourlyweatherdetails.module.css","containers/AppContainer/AppContainer.module.css","components/temperatureModal/temperatureModal.js","components/currentweatherdetails/currentweatherdetails.js","components/hourlyweatherdetails/hourlyweatherdetails.js","components/footer/footer.js","containers/AppContainer/AppContainer.js","App.js","serviceWorker.js","index.js","components/temperatureModal/temperatureModal.module.css"],"names":["module","exports","body","currentweatherdetails","lines","topic","text","twotext","image","a","footer","footercontent","update","section","eachSection","eachSectionclicked","ExtraDetails","iconsection","smallicon","icon","AppContainer","TemperatureModal","tempModal","React","createRef","description","maxmixtemp","handleScroll","window","scrollY","_this","current","style","width","height","opacity","removeEventListener","this","addEventListener","getName","require","react_default","createElement","props","weatherData","ref","className","ClassNames","color","concat","backgroundcolor","build_default","iconString","size","animate","weather","map","content","charAt","toUpperCase","slice","temp","main","toFixed","temp_max","temp_min","sys","country","city","name","Component","CurrentWeatherDetails","UNIX_timestamp","Date","year","getFullYear","month","getMonth","date","getDate","hour","getHours","min","getMinutes","sec","getSeconds","substr","AmorPm","CurrentweatherData","fontSize","humidity","pressure","clouds","all","wind","speed","deg","gettime","sunrise","sunset","HourlyWeatherDetails","state","clicked","showExtraDetails","extra","setState","clickedtofalse","console","log","dayOfWeek","get","_this2","HourlyWeatherData","onClick","key","dt","lib_default","iconId","String","value","id","flip","rotate","getday","Footer","classNames","display","flex","href","datetime","show","updateButtonClicked","react_loading_default","type","latitude","longitude","API_KEY","base","cod","coord","visibility","length","hourlyData","night","alldatafetched","weatherIconManager","Main","Icon","background","backgroundgradient","backgroundString","getlocation","refs","navigator","geolocation","getCurrentPosition","position","coords","getWeather","today","axios","then","spread","response1","response2","data","nightchecker","list","catch","error","iconStringHandler","iconstring","backgroundstring","Object","defineProperty","temperatureModal","hourlyweatherdetails","App","containers_AppContainer_AppContainer","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.feb5301c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"currentweatherdetails_body__3wfSf\",\"currentweatherdetails\":\"currentweatherdetails_currentweatherdetails__3fRHn\",\"lines\":\"currentweatherdetails_lines__1LY9S\",\"topic\":\"currentweatherdetails_topic__1x09H\",\"text\":\"currentweatherdetails_text__3bqSf\",\"twotext\":\"currentweatherdetails_twotext__1xJzK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"footer_image__1rT76\",\"a\":\"footer_a__3Mmu2\",\"footer\":\"footer_footer__195St\",\"footercontent\":\"footer_footercontent__3SYiD\",\"update\":\"footer_update__3QxBl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"hourlyweatherdetails_body__Tvb0z\",\"lines\":\"hourlyweatherdetails_lines__3BTZV\",\"topic\":\"hourlyweatherdetails_topic__1Lu_B\",\"section\":\"hourlyweatherdetails_section__hLDD_\",\"eachSection\":\"hourlyweatherdetails_eachSection__3Sxyq\",\"eachSectionclicked\":\"hourlyweatherdetails_eachSectionclicked__37TTY\",\"ExtraDetails\":\"hourlyweatherdetails_ExtraDetails__RFsmW\",\"iconsection\":\"hourlyweatherdetails_iconsection__GTmDQ\",\"smallicon\":\"hourlyweatherdetails_smallicon__3tIl1\",\"icon\":\"hourlyweatherdetails_icon__zGqC_\",\"text\":\"hourlyweatherdetails_text__1sC3K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppContainer\":\"AppContainer_AppContainer__2NJBC\"};","import React, { Component } from 'react';\r\nimport ClassNames from './temperatureModal.module.css';\r\nimport ReactAnimatedWeather from 'react-animated-weather';\r\n\r\n\r\nlet lastScrollY = 0;\r\nlet windowWidth = 0;\r\nclass TemperatureModal extends Component {\r\n\r\n    componentWillMount() {\r\n        window.removeEventListener('scroll', this.handleScroll);\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('scroll', this.handleScroll);\r\n    }\r\n\r\n    tempModal = React.createRef();\r\n    description = React.createRef();\r\n    maxmixtemp = React.createRef();\r\n\r\n    handleScroll = () => {\r\n        lastScrollY = window.scrollY;\r\n\r\n        if (lastScrollY > 50) {\r\n            this.tempModal.current.style.width = \"100px\";\r\n            this.tempModal.current.style.height = \"100px\";\r\n            this.description.current.style.opacity = \"0\";\r\n            this.maxmixtemp.current.style.opacity = \"0\";\r\n        }\r\n        else {\r\n            this.tempModal.current.style.width = \"300px\";\r\n            this.tempModal.current.style.height = \"300px\";\r\n            this.description.current.style.opacity = \"1\";\r\n            this.maxmixtemp.current.style.opacity = \"1\";\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { getName } = require('country-list');\r\n        return (\r\n            <div>\r\n                {this.props.weatherData? (\r\n                    <div ref={this.tempModal} className={ClassNames.tempModal} style={{\r\n                        color: `${this.props.backgroundcolor}`\r\n                    }}>\r\n                        <div ref={this.description} className={ClassNames.description}>\r\n                            <ReactAnimatedWeather\r\n                                icon={this.props.iconString}\r\n                                color={this.props.backgroundcolor}\r\n                                size={150}\r\n                                animate={true}\r\n                            />\r\n                            <br />\r\n                            {this.props.weatherData.weather.map(content => {\r\n                                return (content.description.charAt(0).toUpperCase() + content.description.slice(1))\r\n                            })}\r\n                            <br />\r\n                        </div>\r\n                        <div className={ClassNames.temp}>\r\n                            {(this.props.weatherData.main.temp - 273.15).toFixed(2)}°C\r\n                            <div ref={this.maxmixtemp} className={ClassNames.maxmixtemp} >\r\n                                <div>↑{(this.props.weatherData.main.temp_max - 273.15).toFixed(2)}°C</div>\r\n                                <div>↓{(this.props.weatherData.main.temp_min - 273.15).toFixed(2)}°C</div>\r\n                            </div>\r\n                        </div>\r\n                        {this.props.weatherData.sys.country?\r\n                        <div className={ClassNames.city}>\r\n                            {this.props.weatherData.name}, {\r\n                                getName(`${this.props.weatherData.sys.country}`)}\r\n                        </div>:null}\r\n                    </div>) : null\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TemperatureModal;\r\n","import React, { Component } from 'react';\nimport ClassNames from './currentweatherdetails.module.css';\n\nclass CurrentWeatherDetails extends Component {\n\n  getdatetime(UNIX_timestamp) {\n    var a = new Date(UNIX_timestamp * 1000);\n    var months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    var year = a.getFullYear();\n    var month = months[a.getMonth()];\n    var date = a.getDate();\n    var hour = \"0\" + a.getHours();\n    var min = \"0\" + a.getMinutes();\n    var sec = \"0\" + a.getSeconds();\n    var datetime = date + ' ' + month + ' ' + year + ' ' + hour.substr(-2) + ':' + min.substr(-2) + ':' + sec.substr(-2);\n    return datetime;\n  }\n  gettime(UNIX_timestamp) {\n    var AmorPm = \"am\"\n    var a = new Date(UNIX_timestamp * 1000);\n    var hour = \"0\" + a.getHours();\n    var min = \"0\" + a.getMinutes();\n    if (hour > 12) {\n      hour = \"0\" + (hour - 12)\n      AmorPm = \"pm\";\n    }\n    var datetime = hour.substr(-2) + ':' + min.substr(-2) + AmorPm;\n    return datetime;\n  }\n\n  render() {\n    return (\n     \n      <div className={ClassNames.body}>\n\n        <div className={ClassNames.currentweatherdetails}>\n          <div className={ClassNames.topic}>Temperature</div>\n          <div className={ClassNames.lines} />\n          <div className={ClassNames.twotext}>\n            <div>↓{(this.props.CurrentweatherData.main.temp_min - 273.15).toFixed(2)}°C</div>\n            |\n            <div style={{fontSize:\"22px\"}}>{(this.props.CurrentweatherData.main.temp - 273.15).toFixed(2)}°C</div>\n            |\n            <div>↑{(this.props.CurrentweatherData.main.temp_max - 273.15).toFixed(2)}°C</div>\n          </div>\n        </div>\n        <div className={ClassNames.currentweatherdetails}>\n          <div className={ClassNames.topic}>Humidity</div>\n          <div className={ClassNames.lines} />\n          <div className={ClassNames.text}>\n            {this.props.CurrentweatherData.main.humidity} %\n          </div>\n        </div>\n\n        <div className={ClassNames.currentweatherdetails}>\n          <div className={ClassNames.topic}>Pressure</div>\n          <div className={ClassNames.lines} />\n          <div className={ClassNames.text}>\n            {this.props.CurrentweatherData.main.pressure} hPa\n          </div>\n        </div>\n\n        <div className={ClassNames.currentweatherdetails}>\n          <div className={ClassNames.topic}>Cloudiness</div>\n          <div className={ClassNames.lines} />\n          <div className={ClassNames.text}>\n           {this.props.CurrentweatherData.clouds.all}%\n          </div>\n        </div>\n\n        <div className={ClassNames.currentweatherdetails}>\n          <div className={ClassNames.topic}>Wind</div>\n          <div className={ClassNames.lines} />\n          <div className={ClassNames.twotext}>\n            <div>Speed: {this.props.CurrentweatherData.wind.speed} m/sec</div>\n            <div>Deg: {this.props.CurrentweatherData.wind.deg}°</div>\n          </div>\n        </div>\n\n        <div className={ClassNames.currentweatherdetails}>\n          <div className={ClassNames.twotext}>\n            <div>↑Sunrise: {this.gettime(this.props.CurrentweatherData.sys.sunrise)}</div>\n            <div>↓Sunset: {this.gettime(this.props.CurrentweatherData.sys.sunset)}</div>\n          </div>\n        </div>\n\n\n        {/* last update {this.getdatetime(this.props.CurrentweatherData.dt)} */}\n      </div >\n    );\n  }\n}\n\nexport default CurrentWeatherDetails;\n","import React, { Component } from 'react';\nimport ClassNames from './hourlyweatherdetails.module.css';\nimport WeatherIcon from 'react-icons-weather';\n\n\nclass HourlyWeatherDetails extends Component {\n\n    state = {\n        ExtraDetails: [],\n        clicked: false,\n    }\n\n\n    gettime(UNIX_timestamp) {\n        var AmorPm = \"am\"\n        var a = new Date(UNIX_timestamp * 1000);\n        var hour = \"0\" + a.getHours();\n        var min = \"0\" + a.getMinutes();\n        if (hour > 12) {\n            hour = \"0\" + (hour - 12)\n            AmorPm = \"pm\";\n        }\n        var datetime = hour.substr(-2) + ':' + min.substr(-2) + AmorPm;\n        return datetime;\n    }\n\n    getday(UNIX_timestamp) {\n        var day = ['Mon', 'Tue', 'Wed', 'Thru', 'Fri', 'Sat', 'Sun'];\n        var a = new Date(UNIX_timestamp * 1000)\n        var dayOfWeek = require('day-of-week').get\n        var b = day[dayOfWeek(new Date(a.getFullYear(), a.getMonth(), a.getDate()), 'America/Los_Angeles')]\n        return b;\n    }\n\n    showExtraDetails = (extra) => {\n        if (extra === this.state.ExtraDetails) {\n            this.setState({ clicked: !this.state.clicked })\n        }\n        else {\n            this.setState({ clicked: true })\n        }\n        this.setState({ ExtraDetails: extra })\n        //console.log(a.getFullYear()+\"/\"+a.getMonth()+\"/\"+a.getDate())\n    }\n    clickedtofalse=()=>{\n        this.setState({clicked:false},()=>{\n            console.log(this.state.clicked)})\n    }\n    render() {\n\n        return (\n            <div className={ClassNames.body}>\n                <div className={ClassNames.topic}>Hourly Forcast</div>\n                <div className={ClassNames.lines} />\n                <div className={ClassNames.section}>\n                    {this.props.HourlyWeatherData.slice(0, 20).map(content => (\n                        <div\n                            className={this.state.clicked && this.state.ExtraDetails === content ? ClassNames.eachSectionclicked : ClassNames.eachSection}\n                            onClick={() => this.showExtraDetails(content)}\n                            key={content.dt}>\n                            <WeatherIcon\n                                name=\"owm\"\n                                className={ClassNames.smallicon}\n                                iconId={String(content.weather.map(value => value.id))}\n                                flip=\"horizontal\"\n                                rotate=\"90\" />\n                            <br />\n                            <div>{(content.main.temp - 273.15).toFixed(2)}°C</div>\n                            <div>{this.gettime(content.dt)}</div>\n                            <div>{this.getday(content.dt)}</div>\n                        </div>\n                    ))}\n                </div>\n                {\n                    this.state.clicked? (\n                        <div className={ClassNames.ExtraDetails}>\n                            <div className={ClassNames.iconsection}>\n                                <WeatherIcon className={ClassNames.icon} name=\"owm\" iconId={String(this.state.ExtraDetails.weather.map(value => value.id))} flip=\"horizontal\" rotate=\"90\" />\n\n                                <div>{this.state.ExtraDetails.weather.map(content => {\n                                    return (content.description.charAt(0).toUpperCase() + content.description.slice(1))\n                                })}\n                                </div>\n                            </div>\n\n                            <div className={ClassNames.text}>\n                                \n                                <div>\n                                    Temp: {(this.state.ExtraDetails.main.temp - 273.15).toFixed(2)}°C\n                                </div>\n                                <div>\n                                    Max Temp: ↑{(this.state.ExtraDetails.main.temp_max - 273.15).toFixed(2)}°C\n                                </div>\n                                <div>\n                                    Min Temp: ↓{(this.state.ExtraDetails.main.temp_min - 273.15).toFixed(2)}°C\n                                </div>\n                                <div>\n                                    Pressure: {this.state.ExtraDetails.main.pressure} hPa\n                                </div>\n                                <div>\n                                    Humidity: {this.state.ExtraDetails.main.humidity} %\n                                </div>\n                            </div>\n                        </div>\n\n                    ) : null\n                }\n                <div className={ClassNames.lines} />\n            </div >\n        );\n    }\n}\n\nexport default HourlyWeatherDetails;","import React from 'react';\nimport classNames from \"./footer.module.css\";\nimport ReactLoading from 'react-loading';\n\n\nconst Footer = (props) => (\n  <div className={classNames.image}>\n    <div className={classNames.footer}>\n      <div style={{ display: \"flex\", flex: \"1\" }} />\n      <div className={classNames.footercontent}>\n        <div>Developed by : <b>Sourav Dey</b></div>\n        {/* <div>Click here for Source Code:  <a className={classNames.a} href=\"https://github.com/Souravdey777/weather-app\"><b><img src={githublogo} style={{width:\"12px\",height:\"12px\"}}/></b></a></div> */}\n        <div>Powered by : <a className={classNames.a} href=\"https://openweathermap.org\"><b>OpenWeatherMapAPI</b></a></div>\n        <div className={classNames.update}>\n          Last Updated : {props.datetime}&nbsp;&nbsp;&nbsp;\n        {props.show?<i className=\"fa\" onClick={props.updateButtonClicked} >&#xf021;</i>:<ReactLoading onClick={props.updateButtonClicked} type=\"spinningBubbles\" color=\"#fff\" height=\"13px\" width=\"13px\" />}\n        </div>\n      </div>\n    </div>\n  </div>\n)\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport ClassNames from './AppContainer.module.css';\nimport TemperatureModal from '../../components/temperatureModal/temperatureModal';\nimport axios from 'axios';\nimport CurrentWeatherDetails from '../../components/currentweatherdetails/currentweatherdetails';\nimport HourlyWeatherDetails from '../../components/hourlyweatherdetails/hourlyweatherdetails';\nimport Footer from '../../components/footer/footer';\nclass AppContainer extends Component {\n    state = {\n        datetime: null,\n        latitude: null,\n        longitude: null,\n        API_KEY: `9ed5e07cc11f0ef0a18b03f79dde4029`,\n        weatherData: {\n            base: \"\",\n            clouds: {},\n            cod: null,\n            coord: {},\n            dt: null,\n            id: null,\n            main: {},\n            name: \"\",\n            sys: {},\n            wind:{},\n            visibility: null,\n            weather: [],\n            length: null,\n        },\n        hourlyData: [],\n        night: false,\n        alldatafetched: false,\n        weatherIconManager: [\n            {\n                Main:\"Thunderstorm\",\n                Icon:\"SLEET\",\n                backgroundcolor:{\n                    background: \"rgb(33, 33, 33)\",\n                    backgroundgradient:\"linear-gradient(0deg, rgb(122, 183, 249) 0%,  rgb(33, 33, 33) 100%)\"\n                }\n            },\n            {\n                Main:\"Drizzle\",\n                Icon:\"RAIN\",\n                backgroundcolor:{\n                    background: \"rgb(0, 50, 111)\",\n                    backgroundgradient:\"linear-gradient(0deg, rgb(122, 183, 249) 0%,  rgb(0, 50, 111) 100%)\"\n                }\n            },\n            {\n                Main:\"Rain\",\n                Icon:\"RAIN\",\n                backgroundcolor:{\n                    background: \"rgb(0, 50, 111)\",\n                    backgroundgradient:\"linear-gradient(0deg, rgb(122, 183, 249) 0%,  rgb(0, 50, 111) 100%)\"\n                }\n            },\n            {\n                Main:\"Snow\",\n                Icon:\"SNOW\",\n                backgroundcolor:{\n                    background: \"rgb(123, 176, 255)\",\n                    backgroundgradient:\"linear-gradient(0deg, rgb(177, 205, 247) 0%, rgb(123, 176, 255) 100%)\"\n                }\n            },\n            {\n                Main:\"Fog\",\n                Icon:\"FOG\",\n                backgroundcolor:{\n                    background: \"rgb(69, 139, 245)\",\n                    backgroundgradient:\"linear-gradient(0deg, rgb(152, 229, 252) 0%, rgb(69, 139, 245) 100%)\"\n                }\n            },\n            {\n                Main:\"Mist\",\n                Icon:\"FOG\",\n                backgroundcolor:{\n                    background: \"rgb(69, 139, 245)\",\n                    backgroundgradient:\"linear-gradient(0deg, rgb(152, 229, 252) 0%, rgb(69, 139, 245) 100%)\"\n                }\n            },\n            {\n                Main:\"Haze\",\n                Icon:\"FOG\",\n                backgroundcolor:{\n                    background: \"rgb(69, 139, 245)\",\n                    backgroundgradient:\"linear-gradient(0deg, rgb(152, 229, 252) 0%, rgb(69, 139, 245) 100%)\"\n                }\n            },\n            {\n                Main:\"Clear\",\n                Icon:\"CLEAR\",\n                backgroundcolor:{\n                    background: \"rgb(50, 183, 255)\",\n                    backgroundgradient:\"linear-gradient(0deg, rgba(255,222,170,1) 0%, rgb(50, 183, 255) 100%)\"\n                }\n            },\n            {\n                Main:\"Clouds\",\n                Icon:\"PARTLY_CLOUDY\",\n                backgroundcolor:{\n                    background: \"rgb(50, 183, 255)\",\n                    backgroundgradient:\"linear-gradient(0deg, rgba(255,222,170,1) 0%, rgb(50, 183, 255) 100%)\"\n                }\n            },\n        ],\n        iconString: \"CLOUDY\",\n        backgroundString: {\n            background: \"rgb(0, 92, 250)\",\n            backgroundgradient:\"linear-gradient(0deg, rgb(122, 170, 254) 0%, rgb(0, 92, 250) 100%)\"\n        }\n    }\n\n    componentDidMount() {\n        this.getlocation();\n    }\n\n    updateButtonClicked = () => {\n        this.setState({ alldatafetched: false, hourlyData: [] })\n        this.getlocation();\n        this.refs.HourlyWeatherDetails.clickedtofalse();\n    }\n\n\n\n    getlocation = () => {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(position => {\n                console.log(position.coords.latitude)\n                console.log(position.coords.longitude)\n                this.setState({ latitude: position.coords.latitude, longitude: position.coords.longitude }, () => {\n                    this.getWeather();\n                })\n            });\n        }\n        var today = new Date();\n        var date = today.getDate() + '/' + (today.getMonth() + 1) + \" \" + (\"0\" + today.getHours()).substr(-2) + ':' + (\"0\" + today.getMinutes()).substr(-2);\n        this.setState({ datetime: date });\n    }\n\n    getWeather = () => {\n\n        axios.all([\n            axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${this.state.latitude}&lon=${this.state.longitude}&APPID=${this.state.API_KEY}`),\n            axios.get(`https://api.openweathermap.org/data/2.5/forecast/hourly?lat=${this.state.latitude}&lon=${this.state.longitude}&APPID=${this.state.API_KEY}`)\n        ]).then(axios.spread((response1, response2) => {\n            const weatherData = response1.data;\n            console.log(weatherData);\n            this.setState({ weatherData: weatherData }, () => {\n                this.nightchecker();\n                this.setState({ alldatafetched: true });\n            });\n            const hourlyData = response2.data.list;\n            console.log(hourlyData);\n            this.setState({ hourlyData: hourlyData });\n        }))\n            .catch(error => {\n                console.log(error);\n                this.setState({ error: error });\n            });\n            \n        // //Daily forcast is not working with this api \n        \n    }\n\n    nightchecker = () => {\n\n        // console.log(this.state.weatherData.sys.sunset);\n        if (this.state.weatherData.sys.sunset > this.state.weatherData.dt && this.state.weatherData.sys.sunrise < this.state.weatherData.dt) {\n            this.setState({ night: false },()=>{this.iconStringHandler();})\n        }\n        else {\n            this.setState({ night: true },()=>{this.iconStringHandler();})\n        }\n    }\n\n    iconStringHandler=()=>{\n        var iconstring=\"PARTLY_CLOUDY\"+(!this.state.night?\"_DAY\":\"_NIGHT\")\n        var backgroundstring={};\n        this.state.weatherIconManager.map(weatherIconManager=>{\n            if(weatherIconManager.Main===this.state.weatherData.weather.map(content => content.main)[0]){\n                // console.log(weatherIconManager.Main)\n                if(weatherIconManager.Main===\"Clear\"){\n                    // console.log(String(weatherIconManager.Icon+(!this.state.night?\"_DAY\":\"_NIGHT\")))\n                    iconstring=weatherIconManager.Icon+(!this.state.night?\"_DAY\":\"_NIGHT\")\n                }\n                else if(weatherIconManager.Main===\"Clouds\"){\n                    //console.log(this.state.weatherData.weather.map(content => content.description)[0]);\n                    if(this.state.weatherData.weather.map(content => content.description)[0]===\"broken clouds\"||\n                    this.state.weatherData.weather.map(content => content.description)[0]===\"overcast clouds\"){\n                        iconstring=\"CLOUDY\"\n                    }\n                    else{\n                    // console.log(String(weatherIconManager.Icon+(!this.state.night?\"_DAY\":\"_NIGHT\")))\n                    iconstring=weatherIconManager.Icon+(!this.state.night?\"_DAY\":\"_NIGHT\")\n                    }\n                    \n                }\n                else{\n                    iconstring=weatherIconManager.Icon\n                }\n                \n                backgroundstring=weatherIconManager.backgroundcolor\n            }\n            return 0;\n        })\n        // console.log(backgroundstring)\n        // console.log(iconstring)\n        this.setState({iconString:iconstring,backgroundString:backgroundstring})\n        \n    }\n\n\n    render() {\n        return (\n            <div className={ClassNames.AppContainer} \n            style={this.state.night ? {\n                background: \"rgb(1, 41, 109)\",\n                background: \"linear-gradient(0deg, rgb(0, 88, 240) 0%, rgb(1, 41, 109) 100%)\"\n            } :             {\n                background: `${this.state.backgroundString.background}`,\n                background: `${this.state.backgroundString.backgroundgradient}`\n            }}\n                >\n                {this.state.weatherData.length===null?null:\n                <TemperatureModal \n                backgroundcolor={this.state.night ?\"rgb(1, 41, 109)\":this.state.backgroundString.background} \n                iconString={this.state.iconString} \n                weatherData={this.state.weatherData} \n                night={this.state.night}/>}\n                <CurrentWeatherDetails CurrentweatherData={this.state.weatherData} />\n                <HourlyWeatherDetails ref=\"HourlyWeatherDetails\" HourlyWeatherData={this.state.hourlyData} />\n                <Footer datetime={this.state.datetime} updateButtonClicked={this.updateButtonClicked} show={this.state.alldatafetched} />\n            </div>\n        );\n    }\n}\n\nexport default AppContainer;\n","import React, { Component } from 'react';\nimport './App.css';\nimport AppContainer from './containers/AppContainer/AppContainer';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <AppContainer/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tempModal\":\"temperatureModal_tempModal__fja7a\",\"temp\":\"temperatureModal_temp__3HBas\",\"maxmixtemp\":\"temperatureModal_maxmixtemp__2JbEq\",\"city\":\"temperatureModal_city__39b3F\",\"description\":\"temperatureModal_description__1wMy3\"};"],"sourceRoot":""}